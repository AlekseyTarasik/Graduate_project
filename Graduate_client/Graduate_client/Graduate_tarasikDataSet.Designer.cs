//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Graduate_client {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Graduate_tarasikDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Graduate_tarasikDataSet : global::System.Data.DataSet {
        
        private Customer_dataDataTable tableCustomer_data;
        
        private Employee_dataDataTable tableEmployee_data;
        
        private Inspection_dataDataTable tableInspection_data;
        
        private Insurance_contractDataTable tableInsurance_contract;
        
        private Message_dataDataTable tableMessage_data;
        
        private Service_stationDataTable tableService_station;
        
        private User_dataDataTable tableUser_data;
        
        private global::System.Data.DataRelation relationFK_Inspection_data_Insurance_contract;
        
        private global::System.Data.DataRelation relationFK_Insurance_contract_Customer_data;
        
        private global::System.Data.DataRelation relationFK_Insurance_contract_Employee_data;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Graduate_tarasikDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Graduate_tarasikDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Customer_data"] != null)) {
                    base.Tables.Add(new Customer_dataDataTable(ds.Tables["Customer_data"]));
                }
                if ((ds.Tables["Employee_data"] != null)) {
                    base.Tables.Add(new Employee_dataDataTable(ds.Tables["Employee_data"]));
                }
                if ((ds.Tables["Inspection_data"] != null)) {
                    base.Tables.Add(new Inspection_dataDataTable(ds.Tables["Inspection_data"]));
                }
                if ((ds.Tables["Insurance_contract"] != null)) {
                    base.Tables.Add(new Insurance_contractDataTable(ds.Tables["Insurance_contract"]));
                }
                if ((ds.Tables["Message_data"] != null)) {
                    base.Tables.Add(new Message_dataDataTable(ds.Tables["Message_data"]));
                }
                if ((ds.Tables["Service_station"] != null)) {
                    base.Tables.Add(new Service_stationDataTable(ds.Tables["Service_station"]));
                }
                if ((ds.Tables["User_data"] != null)) {
                    base.Tables.Add(new User_dataDataTable(ds.Tables["User_data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Customer_dataDataTable Customer_data {
            get {
                return this.tableCustomer_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Employee_dataDataTable Employee_data {
            get {
                return this.tableEmployee_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Inspection_dataDataTable Inspection_data {
            get {
                return this.tableInspection_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Insurance_contractDataTable Insurance_contract {
            get {
                return this.tableInsurance_contract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Message_dataDataTable Message_data {
            get {
                return this.tableMessage_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Service_stationDataTable Service_station {
            get {
                return this.tableService_station;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public User_dataDataTable User_data {
            get {
                return this.tableUser_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Graduate_tarasikDataSet cln = ((Graduate_tarasikDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Customer_data"] != null)) {
                    base.Tables.Add(new Customer_dataDataTable(ds.Tables["Customer_data"]));
                }
                if ((ds.Tables["Employee_data"] != null)) {
                    base.Tables.Add(new Employee_dataDataTable(ds.Tables["Employee_data"]));
                }
                if ((ds.Tables["Inspection_data"] != null)) {
                    base.Tables.Add(new Inspection_dataDataTable(ds.Tables["Inspection_data"]));
                }
                if ((ds.Tables["Insurance_contract"] != null)) {
                    base.Tables.Add(new Insurance_contractDataTable(ds.Tables["Insurance_contract"]));
                }
                if ((ds.Tables["Message_data"] != null)) {
                    base.Tables.Add(new Message_dataDataTable(ds.Tables["Message_data"]));
                }
                if ((ds.Tables["Service_station"] != null)) {
                    base.Tables.Add(new Service_stationDataTable(ds.Tables["Service_station"]));
                }
                if ((ds.Tables["User_data"] != null)) {
                    base.Tables.Add(new User_dataDataTable(ds.Tables["User_data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCustomer_data = ((Customer_dataDataTable)(base.Tables["Customer_data"]));
            if ((initTable == true)) {
                if ((this.tableCustomer_data != null)) {
                    this.tableCustomer_data.InitVars();
                }
            }
            this.tableEmployee_data = ((Employee_dataDataTable)(base.Tables["Employee_data"]));
            if ((initTable == true)) {
                if ((this.tableEmployee_data != null)) {
                    this.tableEmployee_data.InitVars();
                }
            }
            this.tableInspection_data = ((Inspection_dataDataTable)(base.Tables["Inspection_data"]));
            if ((initTable == true)) {
                if ((this.tableInspection_data != null)) {
                    this.tableInspection_data.InitVars();
                }
            }
            this.tableInsurance_contract = ((Insurance_contractDataTable)(base.Tables["Insurance_contract"]));
            if ((initTable == true)) {
                if ((this.tableInsurance_contract != null)) {
                    this.tableInsurance_contract.InitVars();
                }
            }
            this.tableMessage_data = ((Message_dataDataTable)(base.Tables["Message_data"]));
            if ((initTable == true)) {
                if ((this.tableMessage_data != null)) {
                    this.tableMessage_data.InitVars();
                }
            }
            this.tableService_station = ((Service_stationDataTable)(base.Tables["Service_station"]));
            if ((initTable == true)) {
                if ((this.tableService_station != null)) {
                    this.tableService_station.InitVars();
                }
            }
            this.tableUser_data = ((User_dataDataTable)(base.Tables["User_data"]));
            if ((initTable == true)) {
                if ((this.tableUser_data != null)) {
                    this.tableUser_data.InitVars();
                }
            }
            this.relationFK_Inspection_data_Insurance_contract = this.Relations["FK_Inspection_data_Insurance_contract"];
            this.relationFK_Insurance_contract_Customer_data = this.Relations["FK_Insurance_contract_Customer_data"];
            this.relationFK_Insurance_contract_Employee_data = this.Relations["FK_Insurance_contract_Employee_data"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Graduate_tarasikDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Graduate_tarasikDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomer_data = new Customer_dataDataTable();
            base.Tables.Add(this.tableCustomer_data);
            this.tableEmployee_data = new Employee_dataDataTable();
            base.Tables.Add(this.tableEmployee_data);
            this.tableInspection_data = new Inspection_dataDataTable();
            base.Tables.Add(this.tableInspection_data);
            this.tableInsurance_contract = new Insurance_contractDataTable();
            base.Tables.Add(this.tableInsurance_contract);
            this.tableMessage_data = new Message_dataDataTable();
            base.Tables.Add(this.tableMessage_data);
            this.tableService_station = new Service_stationDataTable();
            base.Tables.Add(this.tableService_station);
            this.tableUser_data = new User_dataDataTable();
            base.Tables.Add(this.tableUser_data);
            this.relationFK_Inspection_data_Insurance_contract = new global::System.Data.DataRelation("FK_Inspection_data_Insurance_contract", new global::System.Data.DataColumn[] {
                        this.tableInsurance_contract.id_insuranceColumn}, new global::System.Data.DataColumn[] {
                        this.tableInspection_data.id_insuranceColumn}, false);
            this.Relations.Add(this.relationFK_Inspection_data_Insurance_contract);
            this.relationFK_Insurance_contract_Customer_data = new global::System.Data.DataRelation("FK_Insurance_contract_Customer_data", new global::System.Data.DataColumn[] {
                        this.tableCustomer_data.id_customerColumn}, new global::System.Data.DataColumn[] {
                        this.tableInsurance_contract.id_customerColumn}, false);
            this.Relations.Add(this.relationFK_Insurance_contract_Customer_data);
            this.relationFK_Insurance_contract_Employee_data = new global::System.Data.DataRelation("FK_Insurance_contract_Employee_data", new global::System.Data.DataColumn[] {
                        this.tableEmployee_data.id_employeeColumn}, new global::System.Data.DataColumn[] {
                        this.tableInsurance_contract.id_employeeColumn}, false);
            this.Relations.Add(this.relationFK_Insurance_contract_Employee_data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCustomer_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmployee_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInspection_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInsurance_contract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMessage_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeService_station() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUser_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Customer_dataRowChangeEventHandler(object sender, Customer_dataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Employee_dataRowChangeEventHandler(object sender, Employee_dataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Inspection_dataRowChangeEventHandler(object sender, Inspection_dataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Insurance_contractRowChangeEventHandler(object sender, Insurance_contractRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Message_dataRowChangeEventHandler(object sender, Message_dataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Service_stationRowChangeEventHandler(object sender, Service_stationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void User_dataRowChangeEventHandler(object sender, User_dataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Customer_dataDataTable : global::System.Data.TypedTableBase<Customer_dataRow> {
            
            private global::System.Data.DataColumn columnid_customer;
            
            private global::System.Data.DataColumn columnlast_name_cust;
            
            private global::System.Data.DataColumn columnfirst_name_cust;
            
            private global::System.Data.DataColumn columnmiddle_name_cust;
            
            private global::System.Data.DataColumn columntype_person_cust;
            
            private global::System.Data.DataColumn columnaddress_cust;
            
            private global::System.Data.DataColumn columnphone_cust;
            
            private global::System.Data.DataColumn columnDOB_cust;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataDataTable() {
                this.TableName = "Customer_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Customer_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Customer_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_customerColumn {
                get {
                    return this.columnid_customer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn last_name_custColumn {
                get {
                    return this.columnlast_name_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn first_name_custColumn {
                get {
                    return this.columnfirst_name_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn middle_name_custColumn {
                get {
                    return this.columnmiddle_name_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_person_custColumn {
                get {
                    return this.columntype_person_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn address_custColumn {
                get {
                    return this.columnaddress_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phone_custColumn {
                get {
                    return this.columnphone_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOB_custColumn {
                get {
                    return this.columnDOB_cust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow this[int index] {
                get {
                    return ((Customer_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Customer_dataRowChangeEventHandler Customer_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Customer_dataRowChangeEventHandler Customer_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Customer_dataRowChangeEventHandler Customer_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Customer_dataRowChangeEventHandler Customer_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCustomer_dataRow(Customer_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow AddCustomer_dataRow(string last_name_cust, string first_name_cust, string middle_name_cust, string type_person_cust, string address_cust, string phone_cust, string DOB_cust) {
                Customer_dataRow rowCustomer_dataRow = ((Customer_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        last_name_cust,
                        first_name_cust,
                        middle_name_cust,
                        type_person_cust,
                        address_cust,
                        phone_cust,
                        DOB_cust};
                rowCustomer_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomer_dataRow);
                return rowCustomer_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow FindByid_customer(int id_customer) {
                return ((Customer_dataRow)(this.Rows.Find(new object[] {
                            id_customer})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Customer_dataDataTable cln = ((Customer_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Customer_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_customer = base.Columns["id_customer"];
                this.columnlast_name_cust = base.Columns["last_name_cust"];
                this.columnfirst_name_cust = base.Columns["first_name_cust"];
                this.columnmiddle_name_cust = base.Columns["middle_name_cust"];
                this.columntype_person_cust = base.Columns["type_person_cust"];
                this.columnaddress_cust = base.Columns["address_cust"];
                this.columnphone_cust = base.Columns["phone_cust"];
                this.columnDOB_cust = base.Columns["DOB_cust"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_customer = new global::System.Data.DataColumn("id_customer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_customer);
                this.columnlast_name_cust = new global::System.Data.DataColumn("last_name_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name_cust);
                this.columnfirst_name_cust = new global::System.Data.DataColumn("first_name_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name_cust);
                this.columnmiddle_name_cust = new global::System.Data.DataColumn("middle_name_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name_cust);
                this.columntype_person_cust = new global::System.Data.DataColumn("type_person_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_person_cust);
                this.columnaddress_cust = new global::System.Data.DataColumn("address_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress_cust);
                this.columnphone_cust = new global::System.Data.DataColumn("phone_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone_cust);
                this.columnDOB_cust = new global::System.Data.DataColumn("DOB_cust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB_cust);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_customer}, true));
                this.columnid_customer.AutoIncrement = true;
                this.columnid_customer.AutoIncrementSeed = -1;
                this.columnid_customer.AutoIncrementStep = -1;
                this.columnid_customer.AllowDBNull = false;
                this.columnid_customer.ReadOnly = true;
                this.columnid_customer.Unique = true;
                this.columnlast_name_cust.AllowDBNull = false;
                this.columnlast_name_cust.MaxLength = 20;
                this.columnfirst_name_cust.AllowDBNull = false;
                this.columnfirst_name_cust.MaxLength = 20;
                this.columnmiddle_name_cust.AllowDBNull = false;
                this.columnmiddle_name_cust.MaxLength = 20;
                this.columntype_person_cust.AllowDBNull = false;
                this.columntype_person_cust.MaxLength = 20;
                this.columnaddress_cust.AllowDBNull = false;
                this.columnaddress_cust.MaxLength = 50;
                this.columnphone_cust.AllowDBNull = false;
                this.columnphone_cust.MaxLength = 15;
                this.columnDOB_cust.AllowDBNull = false;
                this.columnDOB_cust.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow NewCustomer_dataRow() {
                return ((Customer_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Customer_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Customer_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Customer_dataRowChanged != null)) {
                    this.Customer_dataRowChanged(this, new Customer_dataRowChangeEvent(((Customer_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Customer_dataRowChanging != null)) {
                    this.Customer_dataRowChanging(this, new Customer_dataRowChangeEvent(((Customer_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Customer_dataRowDeleted != null)) {
                    this.Customer_dataRowDeleted(this, new Customer_dataRowChangeEvent(((Customer_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Customer_dataRowDeleting != null)) {
                    this.Customer_dataRowDeleting(this, new Customer_dataRowChangeEvent(((Customer_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCustomer_dataRow(Customer_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Customer_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Employee_dataDataTable : global::System.Data.TypedTableBase<Employee_dataRow> {
            
            private global::System.Data.DataColumn columnid_employee;
            
            private global::System.Data.DataColumn columnlast_name_emp;
            
            private global::System.Data.DataColumn columnfirst_name_emp;
            
            private global::System.Data.DataColumn columnmiddle_name_emp;
            
            private global::System.Data.DataColumn columnsubunit_emp;
            
            private global::System.Data.DataColumn columnphone_emp;
            
            private global::System.Data.DataColumn columnDOB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataDataTable() {
                this.TableName = "Employee_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Employee_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Employee_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_employeeColumn {
                get {
                    return this.columnid_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn last_name_empColumn {
                get {
                    return this.columnlast_name_emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn first_name_empColumn {
                get {
                    return this.columnfirst_name_emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn middle_name_empColumn {
                get {
                    return this.columnmiddle_name_emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn subunit_empColumn {
                get {
                    return this.columnsubunit_emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phone_empColumn {
                get {
                    return this.columnphone_emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow this[int index] {
                get {
                    return ((Employee_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Employee_dataRowChangeEventHandler Employee_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Employee_dataRowChangeEventHandler Employee_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Employee_dataRowChangeEventHandler Employee_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Employee_dataRowChangeEventHandler Employee_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmployee_dataRow(Employee_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow AddEmployee_dataRow(string last_name_emp, string first_name_emp, string middle_name_emp, string subunit_emp, string phone_emp, string DOB) {
                Employee_dataRow rowEmployee_dataRow = ((Employee_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        last_name_emp,
                        first_name_emp,
                        middle_name_emp,
                        subunit_emp,
                        phone_emp,
                        DOB};
                rowEmployee_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployee_dataRow);
                return rowEmployee_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow FindByid_employee(int id_employee) {
                return ((Employee_dataRow)(this.Rows.Find(new object[] {
                            id_employee})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Employee_dataDataTable cln = ((Employee_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Employee_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_employee = base.Columns["id_employee"];
                this.columnlast_name_emp = base.Columns["last_name_emp"];
                this.columnfirst_name_emp = base.Columns["first_name_emp"];
                this.columnmiddle_name_emp = base.Columns["middle_name_emp"];
                this.columnsubunit_emp = base.Columns["subunit_emp"];
                this.columnphone_emp = base.Columns["phone_emp"];
                this.columnDOB = base.Columns["DOB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_employee = new global::System.Data.DataColumn("id_employee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_employee);
                this.columnlast_name_emp = new global::System.Data.DataColumn("last_name_emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name_emp);
                this.columnfirst_name_emp = new global::System.Data.DataColumn("first_name_emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name_emp);
                this.columnmiddle_name_emp = new global::System.Data.DataColumn("middle_name_emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name_emp);
                this.columnsubunit_emp = new global::System.Data.DataColumn("subunit_emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubunit_emp);
                this.columnphone_emp = new global::System.Data.DataColumn("phone_emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone_emp);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_employee}, true));
                this.columnid_employee.AutoIncrement = true;
                this.columnid_employee.AutoIncrementSeed = -1;
                this.columnid_employee.AutoIncrementStep = -1;
                this.columnid_employee.AllowDBNull = false;
                this.columnid_employee.ReadOnly = true;
                this.columnid_employee.Unique = true;
                this.columnlast_name_emp.AllowDBNull = false;
                this.columnlast_name_emp.MaxLength = 20;
                this.columnfirst_name_emp.AllowDBNull = false;
                this.columnfirst_name_emp.MaxLength = 20;
                this.columnmiddle_name_emp.AllowDBNull = false;
                this.columnmiddle_name_emp.MaxLength = 20;
                this.columnsubunit_emp.AllowDBNull = false;
                this.columnsubunit_emp.MaxLength = 50;
                this.columnphone_emp.AllowDBNull = false;
                this.columnphone_emp.MaxLength = 15;
                this.columnDOB.AllowDBNull = false;
                this.columnDOB.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow NewEmployee_dataRow() {
                return ((Employee_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Employee_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Employee_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Employee_dataRowChanged != null)) {
                    this.Employee_dataRowChanged(this, new Employee_dataRowChangeEvent(((Employee_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Employee_dataRowChanging != null)) {
                    this.Employee_dataRowChanging(this, new Employee_dataRowChangeEvent(((Employee_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Employee_dataRowDeleted != null)) {
                    this.Employee_dataRowDeleted(this, new Employee_dataRowChangeEvent(((Employee_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Employee_dataRowDeleting != null)) {
                    this.Employee_dataRowDeleting(this, new Employee_dataRowChangeEvent(((Employee_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmployee_dataRow(Employee_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Employee_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Inspection_dataDataTable : global::System.Data.TypedTableBase<Inspection_dataRow> {
            
            private global::System.Data.DataColumn columnid_inspection;
            
            private global::System.Data.DataColumn columntype_insur;
            
            private global::System.Data.DataColumn columnsubtype_insur;
            
            private global::System.Data.DataColumn columnnumber_inspect;
            
            private global::System.Data.DataColumn columnnumber_insur;
            
            private global::System.Data.DataColumn columntype_inspect;
            
            private global::System.Data.DataColumn columnorganization_inspect;
            
            private global::System.Data.DataColumn columnFIO_expert;
            
            private global::System.Data.DataColumn columnFIO_expert_manager;
            
            private global::System.Data.DataColumn columnphone_expert_manager;
            
            private global::System.Data.DataColumn columnFIO_employee;
            
            private global::System.Data.DataColumn columnphone_employee;
            
            private global::System.Data.DataColumn columntype_victim;
            
            private global::System.Data.DataColumn columnid_insurance;
            
            private global::System.Data.DataColumn columnduration_inspection;
            
            private global::System.Data.DataColumn columnFIO_start_expert_manage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataDataTable() {
                this.TableName = "Inspection_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Inspection_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Inspection_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_inspectionColumn {
                get {
                    return this.columnid_inspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_insurColumn {
                get {
                    return this.columntype_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn subtype_insurColumn {
                get {
                    return this.columnsubtype_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn number_inspectColumn {
                get {
                    return this.columnnumber_inspect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn number_insurColumn {
                get {
                    return this.columnnumber_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_inspectColumn {
                get {
                    return this.columntype_inspect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn organization_inspectColumn {
                get {
                    return this.columnorganization_inspect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIO_expertColumn {
                get {
                    return this.columnFIO_expert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIO_expert_managerColumn {
                get {
                    return this.columnFIO_expert_manager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phone_expert_managerColumn {
                get {
                    return this.columnphone_expert_manager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIO_employeeColumn {
                get {
                    return this.columnFIO_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phone_employeeColumn {
                get {
                    return this.columnphone_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_victimColumn {
                get {
                    return this.columntype_victim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_insuranceColumn {
                get {
                    return this.columnid_insurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn duration_inspectionColumn {
                get {
                    return this.columnduration_inspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIO_start_expert_manageColumn {
                get {
                    return this.columnFIO_start_expert_manage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow this[int index] {
                get {
                    return ((Inspection_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inspection_dataRowChangeEventHandler Inspection_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inspection_dataRowChangeEventHandler Inspection_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inspection_dataRowChangeEventHandler Inspection_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Inspection_dataRowChangeEventHandler Inspection_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInspection_dataRow(Inspection_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow AddInspection_dataRow(string type_insur, string subtype_insur, string number_inspect, string number_insur, string type_inspect, string organization_inspect, string FIO_expert, string FIO_expert_manager, string phone_expert_manager, string FIO_employee, string phone_employee, string type_victim, Insurance_contractRow parentInsurance_contractRowByFK_Inspection_data_Insurance_contract, string duration_inspection, string FIO_start_expert_manage) {
                Inspection_dataRow rowInspection_dataRow = ((Inspection_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        type_insur,
                        subtype_insur,
                        number_inspect,
                        number_insur,
                        type_inspect,
                        organization_inspect,
                        FIO_expert,
                        FIO_expert_manager,
                        phone_expert_manager,
                        FIO_employee,
                        phone_employee,
                        type_victim,
                        null,
                        duration_inspection,
                        FIO_start_expert_manage};
                if ((parentInsurance_contractRowByFK_Inspection_data_Insurance_contract != null)) {
                    columnValuesArray[13] = parentInsurance_contractRowByFK_Inspection_data_Insurance_contract[0];
                }
                rowInspection_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInspection_dataRow);
                return rowInspection_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow FindByid_insurance(int id_insurance) {
                return ((Inspection_dataRow)(this.Rows.Find(new object[] {
                            id_insurance})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Inspection_dataDataTable cln = ((Inspection_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Inspection_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_inspection = base.Columns["id_inspection"];
                this.columntype_insur = base.Columns["type_insur"];
                this.columnsubtype_insur = base.Columns["subtype_insur"];
                this.columnnumber_inspect = base.Columns["number_inspect"];
                this.columnnumber_insur = base.Columns["number_insur"];
                this.columntype_inspect = base.Columns["type_inspect"];
                this.columnorganization_inspect = base.Columns["organization_inspect"];
                this.columnFIO_expert = base.Columns["FIO_expert"];
                this.columnFIO_expert_manager = base.Columns["FIO_expert_manager"];
                this.columnphone_expert_manager = base.Columns["phone_expert_manager"];
                this.columnFIO_employee = base.Columns["FIO_employee"];
                this.columnphone_employee = base.Columns["phone_employee"];
                this.columntype_victim = base.Columns["type_victim"];
                this.columnid_insurance = base.Columns["id_insurance"];
                this.columnduration_inspection = base.Columns["duration_inspection"];
                this.columnFIO_start_expert_manage = base.Columns["FIO_start_expert_manage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_inspection = new global::System.Data.DataColumn("id_inspection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_inspection);
                this.columntype_insur = new global::System.Data.DataColumn("type_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_insur);
                this.columnsubtype_insur = new global::System.Data.DataColumn("subtype_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtype_insur);
                this.columnnumber_inspect = new global::System.Data.DataColumn("number_inspect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumber_inspect);
                this.columnnumber_insur = new global::System.Data.DataColumn("number_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumber_insur);
                this.columntype_inspect = new global::System.Data.DataColumn("type_inspect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_inspect);
                this.columnorganization_inspect = new global::System.Data.DataColumn("organization_inspect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorganization_inspect);
                this.columnFIO_expert = new global::System.Data.DataColumn("FIO_expert", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO_expert);
                this.columnFIO_expert_manager = new global::System.Data.DataColumn("FIO_expert_manager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO_expert_manager);
                this.columnphone_expert_manager = new global::System.Data.DataColumn("phone_expert_manager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone_expert_manager);
                this.columnFIO_employee = new global::System.Data.DataColumn("FIO_employee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO_employee);
                this.columnphone_employee = new global::System.Data.DataColumn("phone_employee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone_employee);
                this.columntype_victim = new global::System.Data.DataColumn("type_victim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_victim);
                this.columnid_insurance = new global::System.Data.DataColumn("id_insurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_insurance);
                this.columnduration_inspection = new global::System.Data.DataColumn("duration_inspection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnduration_inspection);
                this.columnFIO_start_expert_manage = new global::System.Data.DataColumn("FIO_start_expert_manage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO_start_expert_manage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_insurance}, true));
                this.columnid_inspection.AutoIncrement = true;
                this.columnid_inspection.AutoIncrementSeed = -1;
                this.columnid_inspection.AutoIncrementStep = -1;
                this.columnid_inspection.AllowDBNull = false;
                this.columnid_inspection.ReadOnly = true;
                this.columntype_insur.AllowDBNull = false;
                this.columntype_insur.MaxLength = 20;
                this.columnsubtype_insur.AllowDBNull = false;
                this.columnsubtype_insur.MaxLength = 20;
                this.columnnumber_inspect.AllowDBNull = false;
                this.columnnumber_inspect.MaxLength = 20;
                this.columnnumber_insur.AllowDBNull = false;
                this.columnnumber_insur.MaxLength = 20;
                this.columntype_inspect.AllowDBNull = false;
                this.columntype_inspect.MaxLength = 20;
                this.columnorganization_inspect.AllowDBNull = false;
                this.columnorganization_inspect.MaxLength = 50;
                this.columnFIO_expert.AllowDBNull = false;
                this.columnFIO_expert.MaxLength = 50;
                this.columnFIO_expert_manager.AllowDBNull = false;
                this.columnFIO_expert_manager.MaxLength = 50;
                this.columnphone_expert_manager.AllowDBNull = false;
                this.columnphone_expert_manager.MaxLength = 15;
                this.columnFIO_employee.AllowDBNull = false;
                this.columnFIO_employee.MaxLength = 50;
                this.columnphone_employee.AllowDBNull = false;
                this.columnphone_employee.MaxLength = 15;
                this.columntype_victim.AllowDBNull = false;
                this.columntype_victim.MaxLength = 15;
                this.columnid_insurance.AllowDBNull = false;
                this.columnid_insurance.Unique = true;
                this.columnduration_inspection.AllowDBNull = false;
                this.columnduration_inspection.MaxLength = 15;
                this.columnFIO_start_expert_manage.AllowDBNull = false;
                this.columnFIO_start_expert_manage.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow NewInspection_dataRow() {
                return ((Inspection_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Inspection_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Inspection_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Inspection_dataRowChanged != null)) {
                    this.Inspection_dataRowChanged(this, new Inspection_dataRowChangeEvent(((Inspection_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Inspection_dataRowChanging != null)) {
                    this.Inspection_dataRowChanging(this, new Inspection_dataRowChangeEvent(((Inspection_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Inspection_dataRowDeleted != null)) {
                    this.Inspection_dataRowDeleted(this, new Inspection_dataRowChangeEvent(((Inspection_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Inspection_dataRowDeleting != null)) {
                    this.Inspection_dataRowDeleting(this, new Inspection_dataRowChangeEvent(((Inspection_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInspection_dataRow(Inspection_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Inspection_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Insurance_contractDataTable : global::System.Data.TypedTableBase<Insurance_contractRow> {
            
            private global::System.Data.DataColumn columnid_insurance;
            
            private global::System.Data.DataColumn columntype_insur;
            
            private global::System.Data.DataColumn columnsubtype_insur;
            
            private global::System.Data.DataColumn columnnumber_insur;
            
            private global::System.Data.DataColumn columnobject_insur;
            
            private global::System.Data.DataColumn columncount_insur_summ;
            
            private global::System.Data.DataColumn columnsumm_insur_payment;
            
            private global::System.Data.DataColumn columnstarting_insur;
            
            private global::System.Data.DataColumn columnending_insur;
            
            private global::System.Data.DataColumn columnid_employee;
            
            private global::System.Data.DataColumn columnid_customer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractDataTable() {
                this.TableName = "Insurance_contract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Insurance_contractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Insurance_contractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_insuranceColumn {
                get {
                    return this.columnid_insurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_insurColumn {
                get {
                    return this.columntype_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn subtype_insurColumn {
                get {
                    return this.columnsubtype_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn number_insurColumn {
                get {
                    return this.columnnumber_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn object_insurColumn {
                get {
                    return this.columnobject_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn count_insur_summColumn {
                get {
                    return this.columncount_insur_summ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn summ_insur_paymentColumn {
                get {
                    return this.columnsumm_insur_payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn starting_insurColumn {
                get {
                    return this.columnstarting_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ending_insurColumn {
                get {
                    return this.columnending_insur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_employeeColumn {
                get {
                    return this.columnid_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_customerColumn {
                get {
                    return this.columnid_customer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow this[int index] {
                get {
                    return ((Insurance_contractRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Insurance_contractRowChangeEventHandler Insurance_contractRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Insurance_contractRowChangeEventHandler Insurance_contractRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Insurance_contractRowChangeEventHandler Insurance_contractRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Insurance_contractRowChangeEventHandler Insurance_contractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInsurance_contractRow(Insurance_contractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow AddInsurance_contractRow(string type_insur, string subtype_insur, string number_insur, string object_insur, double count_insur_summ, double summ_insur_payment, string starting_insur, string ending_insur, Employee_dataRow parentEmployee_dataRowByFK_Insurance_contract_Employee_data, Customer_dataRow parentCustomer_dataRowByFK_Insurance_contract_Customer_data) {
                Insurance_contractRow rowInsurance_contractRow = ((Insurance_contractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        type_insur,
                        subtype_insur,
                        number_insur,
                        object_insur,
                        count_insur_summ,
                        summ_insur_payment,
                        starting_insur,
                        ending_insur,
                        null,
                        null};
                if ((parentEmployee_dataRowByFK_Insurance_contract_Employee_data != null)) {
                    columnValuesArray[9] = parentEmployee_dataRowByFK_Insurance_contract_Employee_data[0];
                }
                if ((parentCustomer_dataRowByFK_Insurance_contract_Customer_data != null)) {
                    columnValuesArray[10] = parentCustomer_dataRowByFK_Insurance_contract_Customer_data[0];
                }
                rowInsurance_contractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInsurance_contractRow);
                return rowInsurance_contractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow FindByid_insurance(int id_insurance) {
                return ((Insurance_contractRow)(this.Rows.Find(new object[] {
                            id_insurance})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Insurance_contractDataTable cln = ((Insurance_contractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Insurance_contractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_insurance = base.Columns["id_insurance"];
                this.columntype_insur = base.Columns["type_insur"];
                this.columnsubtype_insur = base.Columns["subtype_insur"];
                this.columnnumber_insur = base.Columns["number_insur"];
                this.columnobject_insur = base.Columns["object_insur"];
                this.columncount_insur_summ = base.Columns["count_insur_summ"];
                this.columnsumm_insur_payment = base.Columns["summ_insur_payment"];
                this.columnstarting_insur = base.Columns["starting_insur"];
                this.columnending_insur = base.Columns["ending_insur"];
                this.columnid_employee = base.Columns["id_employee"];
                this.columnid_customer = base.Columns["id_customer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_insurance = new global::System.Data.DataColumn("id_insurance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_insurance);
                this.columntype_insur = new global::System.Data.DataColumn("type_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_insur);
                this.columnsubtype_insur = new global::System.Data.DataColumn("subtype_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtype_insur);
                this.columnnumber_insur = new global::System.Data.DataColumn("number_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumber_insur);
                this.columnobject_insur = new global::System.Data.DataColumn("object_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobject_insur);
                this.columncount_insur_summ = new global::System.Data.DataColumn("count_insur_summ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncount_insur_summ);
                this.columnsumm_insur_payment = new global::System.Data.DataColumn("summ_insur_payment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsumm_insur_payment);
                this.columnstarting_insur = new global::System.Data.DataColumn("starting_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstarting_insur);
                this.columnending_insur = new global::System.Data.DataColumn("ending_insur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnending_insur);
                this.columnid_employee = new global::System.Data.DataColumn("id_employee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_employee);
                this.columnid_customer = new global::System.Data.DataColumn("id_customer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_customer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_insurance}, true));
                this.columnid_insurance.AutoIncrement = true;
                this.columnid_insurance.AutoIncrementSeed = -1;
                this.columnid_insurance.AutoIncrementStep = -1;
                this.columnid_insurance.AllowDBNull = false;
                this.columnid_insurance.ReadOnly = true;
                this.columnid_insurance.Unique = true;
                this.columntype_insur.AllowDBNull = false;
                this.columntype_insur.MaxLength = 20;
                this.columnsubtype_insur.AllowDBNull = false;
                this.columnsubtype_insur.MaxLength = 20;
                this.columnnumber_insur.AllowDBNull = false;
                this.columnnumber_insur.MaxLength = 20;
                this.columnobject_insur.AllowDBNull = false;
                this.columnobject_insur.MaxLength = 20;
                this.columncount_insur_summ.AllowDBNull = false;
                this.columnsumm_insur_payment.AllowDBNull = false;
                this.columnstarting_insur.AllowDBNull = false;
                this.columnstarting_insur.MaxLength = 20;
                this.columnending_insur.AllowDBNull = false;
                this.columnending_insur.MaxLength = 20;
                this.columnid_employee.AllowDBNull = false;
                this.columnid_customer.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow NewInsurance_contractRow() {
                return ((Insurance_contractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Insurance_contractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Insurance_contractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Insurance_contractRowChanged != null)) {
                    this.Insurance_contractRowChanged(this, new Insurance_contractRowChangeEvent(((Insurance_contractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Insurance_contractRowChanging != null)) {
                    this.Insurance_contractRowChanging(this, new Insurance_contractRowChangeEvent(((Insurance_contractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Insurance_contractRowDeleted != null)) {
                    this.Insurance_contractRowDeleted(this, new Insurance_contractRowChangeEvent(((Insurance_contractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Insurance_contractRowDeleting != null)) {
                    this.Insurance_contractRowDeleting(this, new Insurance_contractRowChangeEvent(((Insurance_contractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInsurance_contractRow(Insurance_contractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Insurance_contractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Message_dataDataTable : global::System.Data.TypedTableBase<Message_dataRow> {
            
            private global::System.Data.DataColumn columnid_message;
            
            private global::System.Data.DataColumn columnid_user;
            
            private global::System.Data.DataColumn columnid_employee;
            
            private global::System.Data.DataColumn columnFIO;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnText_message;
            
            private global::System.Data.DataColumn columnadd_documents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataDataTable() {
                this.TableName = "Message_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Message_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Message_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_messageColumn {
                get {
                    return this.columnid_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_userColumn {
                get {
                    return this.columnid_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_employeeColumn {
                get {
                    return this.columnid_employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIOColumn {
                get {
                    return this.columnFIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text_messageColumn {
                get {
                    return this.columnText_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn add_documentsColumn {
                get {
                    return this.columnadd_documents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRow this[int index] {
                get {
                    return ((Message_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Message_dataRowChangeEventHandler Message_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Message_dataRowChangeEventHandler Message_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Message_dataRowChangeEventHandler Message_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Message_dataRowChangeEventHandler Message_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMessage_dataRow(Message_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRow AddMessage_dataRow(string id_message, string id_user, string id_employee, string FIO, string Cost, string Text_message, string add_documents) {
                Message_dataRow rowMessage_dataRow = ((Message_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_message,
                        id_user,
                        id_employee,
                        FIO,
                        Cost,
                        Text_message,
                        add_documents};
                rowMessage_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMessage_dataRow);
                return rowMessage_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRow FindByid_message(string id_message) {
                return ((Message_dataRow)(this.Rows.Find(new object[] {
                            id_message})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Message_dataDataTable cln = ((Message_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Message_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_message = base.Columns["id_message"];
                this.columnid_user = base.Columns["id_user"];
                this.columnid_employee = base.Columns["id_employee"];
                this.columnFIO = base.Columns["FIO"];
                this.columnCost = base.Columns["Cost"];
                this.columnText_message = base.Columns["Text_message"];
                this.columnadd_documents = base.Columns["add_documents"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_message = new global::System.Data.DataColumn("id_message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_message);
                this.columnid_user = new global::System.Data.DataColumn("id_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_user);
                this.columnid_employee = new global::System.Data.DataColumn("id_employee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_employee);
                this.columnFIO = new global::System.Data.DataColumn("FIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnText_message = new global::System.Data.DataColumn("Text_message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText_message);
                this.columnadd_documents = new global::System.Data.DataColumn("add_documents", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadd_documents);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_message}, true));
                this.columnid_message.AllowDBNull = false;
                this.columnid_message.Unique = true;
                this.columnid_message.MaxLength = 10;
                this.columnid_user.AllowDBNull = false;
                this.columnid_user.MaxLength = 10;
                this.columnid_employee.AllowDBNull = false;
                this.columnid_employee.MaxLength = 10;
                this.columnFIO.AllowDBNull = false;
                this.columnFIO.MaxLength = 30;
                this.columnCost.AllowDBNull = false;
                this.columnCost.MaxLength = 10;
                this.columnText_message.AllowDBNull = false;
                this.columnText_message.MaxLength = 1000;
                this.columnadd_documents.AllowDBNull = false;
                this.columnadd_documents.MaxLength = 2850;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRow NewMessage_dataRow() {
                return ((Message_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Message_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Message_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Message_dataRowChanged != null)) {
                    this.Message_dataRowChanged(this, new Message_dataRowChangeEvent(((Message_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Message_dataRowChanging != null)) {
                    this.Message_dataRowChanging(this, new Message_dataRowChangeEvent(((Message_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Message_dataRowDeleted != null)) {
                    this.Message_dataRowDeleted(this, new Message_dataRowChangeEvent(((Message_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Message_dataRowDeleting != null)) {
                    this.Message_dataRowDeleting(this, new Message_dataRowChangeEvent(((Message_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMessage_dataRow(Message_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Message_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Service_stationDataTable : global::System.Data.TypedTableBase<Service_stationRow> {
            
            private global::System.Data.DataColumn columnid_service;
            
            private global::System.Data.DataColumn columnname_serv;
            
            private global::System.Data.DataColumn columnlegal_address;
            
            private global::System.Data.DataColumn columnactual_address;
            
            private global::System.Data.DataColumn columncode_UNP;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn _columne_mail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationDataTable() {
                this.TableName = "Service_station";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Service_stationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Service_stationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_serviceColumn {
                get {
                    return this.columnid_service;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_servColumn {
                get {
                    return this.columnname_serv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn legal_addressColumn {
                get {
                    return this.columnlegal_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actual_addressColumn {
                get {
                    return this.columnactual_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn code_UNPColumn {
                get {
                    return this.columncode_UNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _e_mailColumn {
                get {
                    return this._columne_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationRow this[int index] {
                get {
                    return ((Service_stationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Service_stationRowChangeEventHandler Service_stationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Service_stationRowChangeEventHandler Service_stationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Service_stationRowChangeEventHandler Service_stationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Service_stationRowChangeEventHandler Service_stationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddService_stationRow(Service_stationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationRow AddService_stationRow(string name_serv, string legal_address, string actual_address, string code_UNP, string phone, string fax, string _e_mail) {
                Service_stationRow rowService_stationRow = ((Service_stationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name_serv,
                        legal_address,
                        actual_address,
                        code_UNP,
                        phone,
                        fax,
                        _e_mail};
                rowService_stationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowService_stationRow);
                return rowService_stationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Service_stationDataTable cln = ((Service_stationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Service_stationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_service = base.Columns["id_service"];
                this.columnname_serv = base.Columns["name_serv"];
                this.columnlegal_address = base.Columns["legal_address"];
                this.columnactual_address = base.Columns["actual_address"];
                this.columncode_UNP = base.Columns["code_UNP"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this._columne_mail = base.Columns["e-mail"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_service = new global::System.Data.DataColumn("id_service", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_service);
                this.columnname_serv = new global::System.Data.DataColumn("name_serv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_serv);
                this.columnlegal_address = new global::System.Data.DataColumn("legal_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlegal_address);
                this.columnactual_address = new global::System.Data.DataColumn("actual_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactual_address);
                this.columncode_UNP = new global::System.Data.DataColumn("code_UNP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode_UNP);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this._columne_mail = new global::System.Data.DataColumn("e-mail", typeof(string), null, global::System.Data.MappingType.Element);
                this._columne_mail.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columne_mail");
                this._columne_mail.ExtendedProperties.Add("Generator_UserColumnName", "e-mail");
                base.Columns.Add(this._columne_mail);
                this.columnid_service.AutoIncrement = true;
                this.columnid_service.AutoIncrementSeed = -1;
                this.columnid_service.AutoIncrementStep = -1;
                this.columnid_service.AllowDBNull = false;
                this.columnid_service.ReadOnly = true;
                this.columnname_serv.AllowDBNull = false;
                this.columnname_serv.MaxLength = 25;
                this.columnlegal_address.AllowDBNull = false;
                this.columnlegal_address.MaxLength = 50;
                this.columnactual_address.AllowDBNull = false;
                this.columnactual_address.MaxLength = 50;
                this.columncode_UNP.AllowDBNull = false;
                this.columncode_UNP.MaxLength = 25;
                this.columnphone.AllowDBNull = false;
                this.columnphone.MaxLength = 15;
                this.columnfax.AllowDBNull = false;
                this.columnfax.MaxLength = 15;
                this._columne_mail.AllowDBNull = false;
                this._columne_mail.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationRow NewService_stationRow() {
                return ((Service_stationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Service_stationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Service_stationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Service_stationRowChanged != null)) {
                    this.Service_stationRowChanged(this, new Service_stationRowChangeEvent(((Service_stationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Service_stationRowChanging != null)) {
                    this.Service_stationRowChanging(this, new Service_stationRowChangeEvent(((Service_stationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Service_stationRowDeleted != null)) {
                    this.Service_stationRowDeleted(this, new Service_stationRowChangeEvent(((Service_stationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Service_stationRowDeleting != null)) {
                    this.Service_stationRowDeleting(this, new Service_stationRowChangeEvent(((Service_stationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveService_stationRow(Service_stationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Service_stationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class User_dataDataTable : global::System.Data.TypedTableBase<User_dataRow> {
            
            private global::System.Data.DataColumn columnid_user;
            
            private global::System.Data.DataColumn columnlogin_user;
            
            private global::System.Data.DataColumn columnpass_user;
            
            private global::System.Data.DataColumn columntype_user;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnmiddle_name;
            
            private global::System.Data.DataColumn columnname_filial;
            
            private global::System.Data.DataColumn columnposition_user;
            
            private global::System.Data.DataColumn columnblock_account;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataDataTable() {
                this.TableName = "User_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal User_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected User_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_userColumn {
                get {
                    return this.columnid_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn login_userColumn {
                get {
                    return this.columnlogin_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pass_userColumn {
                get {
                    return this.columnpass_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_userColumn {
                get {
                    return this.columntype_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn middle_nameColumn {
                get {
                    return this.columnmiddle_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_filialColumn {
                get {
                    return this.columnname_filial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn position_userColumn {
                get {
                    return this.columnposition_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn block_accountColumn {
                get {
                    return this.columnblock_account;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRow this[int index] {
                get {
                    return ((User_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event User_dataRowChangeEventHandler User_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event User_dataRowChangeEventHandler User_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event User_dataRowChangeEventHandler User_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event User_dataRowChangeEventHandler User_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUser_dataRow(User_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRow AddUser_dataRow(string login_user, string pass_user, string type_user, string last_name, string first_name, string middle_name, string name_filial, string position_user, int block_account) {
                User_dataRow rowUser_dataRow = ((User_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        login_user,
                        pass_user,
                        type_user,
                        last_name,
                        first_name,
                        middle_name,
                        name_filial,
                        position_user,
                        block_account};
                rowUser_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUser_dataRow);
                return rowUser_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRow FindByid_user(int id_user) {
                return ((User_dataRow)(this.Rows.Find(new object[] {
                            id_user})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                User_dataDataTable cln = ((User_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new User_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_user = base.Columns["id_user"];
                this.columnlogin_user = base.Columns["login_user"];
                this.columnpass_user = base.Columns["pass_user"];
                this.columntype_user = base.Columns["type_user"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnmiddle_name = base.Columns["middle_name"];
                this.columnname_filial = base.Columns["name_filial"];
                this.columnposition_user = base.Columns["position_user"];
                this.columnblock_account = base.Columns["block_account"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_user = new global::System.Data.DataColumn("id_user", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_user);
                this.columnlogin_user = new global::System.Data.DataColumn("login_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_user);
                this.columnpass_user = new global::System.Data.DataColumn("pass_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpass_user);
                this.columntype_user = new global::System.Data.DataColumn("type_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_user);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnmiddle_name = new global::System.Data.DataColumn("middle_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name);
                this.columnname_filial = new global::System.Data.DataColumn("name_filial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_filial);
                this.columnposition_user = new global::System.Data.DataColumn("position_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition_user);
                this.columnblock_account = new global::System.Data.DataColumn("block_account", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblock_account);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_user}, true));
                this.columnid_user.AutoIncrement = true;
                this.columnid_user.AutoIncrementSeed = -1;
                this.columnid_user.AutoIncrementStep = -1;
                this.columnid_user.AllowDBNull = false;
                this.columnid_user.ReadOnly = true;
                this.columnid_user.Unique = true;
                this.columnlogin_user.AllowDBNull = false;
                this.columnlogin_user.MaxLength = 20;
                this.columnpass_user.AllowDBNull = false;
                this.columnpass_user.MaxLength = 20;
                this.columntype_user.AllowDBNull = false;
                this.columntype_user.MaxLength = 20;
                this.columnlast_name.AllowDBNull = false;
                this.columnlast_name.MaxLength = 20;
                this.columnfirst_name.AllowDBNull = false;
                this.columnfirst_name.MaxLength = 20;
                this.columnmiddle_name.AllowDBNull = false;
                this.columnmiddle_name.MaxLength = 20;
                this.columnname_filial.AllowDBNull = false;
                this.columnname_filial.MaxLength = 50;
                this.columnposition_user.AllowDBNull = false;
                this.columnposition_user.MaxLength = 40;
                this.columnblock_account.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRow NewUser_dataRow() {
                return ((User_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new User_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(User_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.User_dataRowChanged != null)) {
                    this.User_dataRowChanged(this, new User_dataRowChangeEvent(((User_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.User_dataRowChanging != null)) {
                    this.User_dataRowChanging(this, new User_dataRowChangeEvent(((User_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.User_dataRowDeleted != null)) {
                    this.User_dataRowDeleted(this, new User_dataRowChangeEvent(((User_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.User_dataRowDeleting != null)) {
                    this.User_dataRowDeleting(this, new User_dataRowChangeEvent(((User_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUser_dataRow(User_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Graduate_tarasikDataSet ds = new Graduate_tarasikDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "User_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Customer_dataRow : global::System.Data.DataRow {
            
            private Customer_dataDataTable tableCustomer_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Customer_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomer_data = ((Customer_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_customer {
                get {
                    return ((int)(this[this.tableCustomer_data.id_customerColumn]));
                }
                set {
                    this[this.tableCustomer_data.id_customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string last_name_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.last_name_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.last_name_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string first_name_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.first_name_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.first_name_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string middle_name_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.middle_name_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.middle_name_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_person_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.type_person_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.type_person_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string address_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.address_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.address_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.phone_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.phone_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOB_cust {
                get {
                    return ((string)(this[this.tableCustomer_data.DOB_custColumn]));
                }
                set {
                    this[this.tableCustomer_data.DOB_custColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow[] GetInsurance_contractRows() {
                if ((this.Table.ChildRelations["FK_Insurance_contract_Customer_data"] == null)) {
                    return new Insurance_contractRow[0];
                }
                else {
                    return ((Insurance_contractRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Insurance_contract_Customer_data"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Employee_dataRow : global::System.Data.DataRow {
            
            private Employee_dataDataTable tableEmployee_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Employee_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployee_data = ((Employee_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_employee {
                get {
                    return ((int)(this[this.tableEmployee_data.id_employeeColumn]));
                }
                set {
                    this[this.tableEmployee_data.id_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string last_name_emp {
                get {
                    return ((string)(this[this.tableEmployee_data.last_name_empColumn]));
                }
                set {
                    this[this.tableEmployee_data.last_name_empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string first_name_emp {
                get {
                    return ((string)(this[this.tableEmployee_data.first_name_empColumn]));
                }
                set {
                    this[this.tableEmployee_data.first_name_empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string middle_name_emp {
                get {
                    return ((string)(this[this.tableEmployee_data.middle_name_empColumn]));
                }
                set {
                    this[this.tableEmployee_data.middle_name_empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string subunit_emp {
                get {
                    return ((string)(this[this.tableEmployee_data.subunit_empColumn]));
                }
                set {
                    this[this.tableEmployee_data.subunit_empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone_emp {
                get {
                    return ((string)(this[this.tableEmployee_data.phone_empColumn]));
                }
                set {
                    this[this.tableEmployee_data.phone_empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOB {
                get {
                    return ((string)(this[this.tableEmployee_data.DOBColumn]));
                }
                set {
                    this[this.tableEmployee_data.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow[] GetInsurance_contractRows() {
                if ((this.Table.ChildRelations["FK_Insurance_contract_Employee_data"] == null)) {
                    return new Insurance_contractRow[0];
                }
                else {
                    return ((Insurance_contractRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Insurance_contract_Employee_data"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Inspection_dataRow : global::System.Data.DataRow {
            
            private Inspection_dataDataTable tableInspection_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Inspection_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInspection_data = ((Inspection_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_inspection {
                get {
                    return ((int)(this[this.tableInspection_data.id_inspectionColumn]));
                }
                set {
                    this[this.tableInspection_data.id_inspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_insur {
                get {
                    return ((string)(this[this.tableInspection_data.type_insurColumn]));
                }
                set {
                    this[this.tableInspection_data.type_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string subtype_insur {
                get {
                    return ((string)(this[this.tableInspection_data.subtype_insurColumn]));
                }
                set {
                    this[this.tableInspection_data.subtype_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string number_inspect {
                get {
                    return ((string)(this[this.tableInspection_data.number_inspectColumn]));
                }
                set {
                    this[this.tableInspection_data.number_inspectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string number_insur {
                get {
                    return ((string)(this[this.tableInspection_data.number_insurColumn]));
                }
                set {
                    this[this.tableInspection_data.number_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_inspect {
                get {
                    return ((string)(this[this.tableInspection_data.type_inspectColumn]));
                }
                set {
                    this[this.tableInspection_data.type_inspectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string organization_inspect {
                get {
                    return ((string)(this[this.tableInspection_data.organization_inspectColumn]));
                }
                set {
                    this[this.tableInspection_data.organization_inspectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO_expert {
                get {
                    return ((string)(this[this.tableInspection_data.FIO_expertColumn]));
                }
                set {
                    this[this.tableInspection_data.FIO_expertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO_expert_manager {
                get {
                    return ((string)(this[this.tableInspection_data.FIO_expert_managerColumn]));
                }
                set {
                    this[this.tableInspection_data.FIO_expert_managerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone_expert_manager {
                get {
                    return ((string)(this[this.tableInspection_data.phone_expert_managerColumn]));
                }
                set {
                    this[this.tableInspection_data.phone_expert_managerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO_employee {
                get {
                    return ((string)(this[this.tableInspection_data.FIO_employeeColumn]));
                }
                set {
                    this[this.tableInspection_data.FIO_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone_employee {
                get {
                    return ((string)(this[this.tableInspection_data.phone_employeeColumn]));
                }
                set {
                    this[this.tableInspection_data.phone_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_victim {
                get {
                    return ((string)(this[this.tableInspection_data.type_victimColumn]));
                }
                set {
                    this[this.tableInspection_data.type_victimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_insurance {
                get {
                    return ((int)(this[this.tableInspection_data.id_insuranceColumn]));
                }
                set {
                    this[this.tableInspection_data.id_insuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string duration_inspection {
                get {
                    return ((string)(this[this.tableInspection_data.duration_inspectionColumn]));
                }
                set {
                    this[this.tableInspection_data.duration_inspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO_start_expert_manage {
                get {
                    return ((string)(this[this.tableInspection_data.FIO_start_expert_manageColumn]));
                }
                set {
                    this[this.tableInspection_data.FIO_start_expert_manageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow Insurance_contractRow {
                get {
                    return ((Insurance_contractRow)(this.GetParentRow(this.Table.ParentRelations["FK_Inspection_data_Insurance_contract"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Inspection_data_Insurance_contract"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Insurance_contractRow : global::System.Data.DataRow {
            
            private Insurance_contractDataTable tableInsurance_contract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Insurance_contractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInsurance_contract = ((Insurance_contractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_insurance {
                get {
                    return ((int)(this[this.tableInsurance_contract.id_insuranceColumn]));
                }
                set {
                    this[this.tableInsurance_contract.id_insuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.type_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.type_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string subtype_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.subtype_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.subtype_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string number_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.number_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.number_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string object_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.object_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.object_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double count_insur_summ {
                get {
                    return ((double)(this[this.tableInsurance_contract.count_insur_summColumn]));
                }
                set {
                    this[this.tableInsurance_contract.count_insur_summColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double summ_insur_payment {
                get {
                    return ((double)(this[this.tableInsurance_contract.summ_insur_paymentColumn]));
                }
                set {
                    this[this.tableInsurance_contract.summ_insur_paymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string starting_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.starting_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.starting_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ending_insur {
                get {
                    return ((string)(this[this.tableInsurance_contract.ending_insurColumn]));
                }
                set {
                    this[this.tableInsurance_contract.ending_insurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_employee {
                get {
                    return ((int)(this[this.tableInsurance_contract.id_employeeColumn]));
                }
                set {
                    this[this.tableInsurance_contract.id_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_customer {
                get {
                    return ((int)(this[this.tableInsurance_contract.id_customerColumn]));
                }
                set {
                    this[this.tableInsurance_contract.id_customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow Customer_dataRow {
                get {
                    return ((Customer_dataRow)(this.GetParentRow(this.Table.ParentRelations["FK_Insurance_contract_Customer_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Insurance_contract_Customer_data"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow Employee_dataRow {
                get {
                    return ((Employee_dataRow)(this.GetParentRow(this.Table.ParentRelations["FK_Insurance_contract_Employee_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Insurance_contract_Employee_data"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow[] GetInspection_dataRows() {
                if ((this.Table.ChildRelations["FK_Inspection_data_Insurance_contract"] == null)) {
                    return new Inspection_dataRow[0];
                }
                else {
                    return ((Inspection_dataRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Inspection_data_Insurance_contract"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Message_dataRow : global::System.Data.DataRow {
            
            private Message_dataDataTable tableMessage_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Message_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMessage_data = ((Message_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id_message {
                get {
                    return ((string)(this[this.tableMessage_data.id_messageColumn]));
                }
                set {
                    this[this.tableMessage_data.id_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id_user {
                get {
                    return ((string)(this[this.tableMessage_data.id_userColumn]));
                }
                set {
                    this[this.tableMessage_data.id_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id_employee {
                get {
                    return ((string)(this[this.tableMessage_data.id_employeeColumn]));
                }
                set {
                    this[this.tableMessage_data.id_employeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO {
                get {
                    return ((string)(this[this.tableMessage_data.FIOColumn]));
                }
                set {
                    this[this.tableMessage_data.FIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cost {
                get {
                    return ((string)(this[this.tableMessage_data.CostColumn]));
                }
                set {
                    this[this.tableMessage_data.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text_message {
                get {
                    return ((string)(this[this.tableMessage_data.Text_messageColumn]));
                }
                set {
                    this[this.tableMessage_data.Text_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string add_documents {
                get {
                    return ((string)(this[this.tableMessage_data.add_documentsColumn]));
                }
                set {
                    this[this.tableMessage_data.add_documentsColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Service_stationRow : global::System.Data.DataRow {
            
            private Service_stationDataTable tableService_station;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Service_stationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableService_station = ((Service_stationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_service {
                get {
                    return ((int)(this[this.tableService_station.id_serviceColumn]));
                }
                set {
                    this[this.tableService_station.id_serviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_serv {
                get {
                    return ((string)(this[this.tableService_station.name_servColumn]));
                }
                set {
                    this[this.tableService_station.name_servColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string legal_address {
                get {
                    return ((string)(this[this.tableService_station.legal_addressColumn]));
                }
                set {
                    this[this.tableService_station.legal_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string actual_address {
                get {
                    return ((string)(this[this.tableService_station.actual_addressColumn]));
                }
                set {
                    this[this.tableService_station.actual_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code_UNP {
                get {
                    return ((string)(this[this.tableService_station.code_UNPColumn]));
                }
                set {
                    this[this.tableService_station.code_UNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone {
                get {
                    return ((string)(this[this.tableService_station.phoneColumn]));
                }
                set {
                    this[this.tableService_station.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fax {
                get {
                    return ((string)(this[this.tableService_station.faxColumn]));
                }
                set {
                    this[this.tableService_station.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _e_mail {
                get {
                    return ((string)(this[this.tableService_station._e_mailColumn]));
                }
                set {
                    this[this.tableService_station._e_mailColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class User_dataRow : global::System.Data.DataRow {
            
            private User_dataDataTable tableUser_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal User_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUser_data = ((User_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id_user {
                get {
                    return ((int)(this[this.tableUser_data.id_userColumn]));
                }
                set {
                    this[this.tableUser_data.id_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login_user {
                get {
                    return ((string)(this[this.tableUser_data.login_userColumn]));
                }
                set {
                    this[this.tableUser_data.login_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pass_user {
                get {
                    return ((string)(this[this.tableUser_data.pass_userColumn]));
                }
                set {
                    this[this.tableUser_data.pass_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_user {
                get {
                    return ((string)(this[this.tableUser_data.type_userColumn]));
                }
                set {
                    this[this.tableUser_data.type_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string last_name {
                get {
                    return ((string)(this[this.tableUser_data.last_nameColumn]));
                }
                set {
                    this[this.tableUser_data.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string first_name {
                get {
                    return ((string)(this[this.tableUser_data.first_nameColumn]));
                }
                set {
                    this[this.tableUser_data.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string middle_name {
                get {
                    return ((string)(this[this.tableUser_data.middle_nameColumn]));
                }
                set {
                    this[this.tableUser_data.middle_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_filial {
                get {
                    return ((string)(this[this.tableUser_data.name_filialColumn]));
                }
                set {
                    this[this.tableUser_data.name_filialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string position_user {
                get {
                    return ((string)(this[this.tableUser_data.position_userColumn]));
                }
                set {
                    this[this.tableUser_data.position_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int block_account {
                get {
                    return ((int)(this[this.tableUser_data.block_accountColumn]));
                }
                set {
                    this[this.tableUser_data.block_accountColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Customer_dataRowChangeEvent : global::System.EventArgs {
            
            private Customer_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRowChangeEvent(Customer_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Customer_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Employee_dataRowChangeEvent : global::System.EventArgs {
            
            private Employee_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRowChangeEvent(Employee_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Employee_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Inspection_dataRowChangeEvent : global::System.EventArgs {
            
            private Inspection_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRowChangeEvent(Inspection_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Inspection_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Insurance_contractRowChangeEvent : global::System.EventArgs {
            
            private Insurance_contractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRowChangeEvent(Insurance_contractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Insurance_contractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Message_dataRowChangeEvent : global::System.EventArgs {
            
            private Message_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRowChangeEvent(Message_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Message_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Service_stationRowChangeEvent : global::System.EventArgs {
            
            private Service_stationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationRowChangeEvent(Service_stationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Service_stationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class User_dataRowChangeEvent : global::System.EventArgs {
            
            private User_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRowChangeEvent(User_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public User_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Graduate_client.Graduate_tarasikDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Customer_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Customer_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Customer_data";
            tableMapping.ColumnMappings.Add("id_customer", "id_customer");
            tableMapping.ColumnMappings.Add("last_name_cust", "last_name_cust");
            tableMapping.ColumnMappings.Add("first_name_cust", "first_name_cust");
            tableMapping.ColumnMappings.Add("middle_name_cust", "middle_name_cust");
            tableMapping.ColumnMappings.Add("type_person_cust", "type_person_cust");
            tableMapping.ColumnMappings.Add("address_cust", "address_cust");
            tableMapping.ColumnMappings.Add("phone_cust", "phone_cust");
            tableMapping.ColumnMappings.Add("DOB_cust", "DOB_cust");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Customer_data] WHERE (([id_customer] = @Original_id_customer) AND ([last_name_cust] = @Original_last_name_cust) AND ([first_name_cust] = @Original_first_name_cust) AND ([middle_name_cust] = @Original_middle_name_cust) AND ([type_person_cust] = @Original_type_person_cust) AND ([address_cust] = @Original_address_cust) AND ([phone_cust] = @Original_phone_cust) AND ([DOB_cust] = @Original_DOB_cust))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_person_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_person_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Customer_data] ([last_name_cust], [first_name_cust], [middle_name_cust], [type_person_cust], [address_cust], [phone_cust], [DOB_cust]) VALUES (@last_name_cust, @first_name_cust, @middle_name_cust, @type_person_cust, @address_cust, @phone_cust, @DOB_cust);
SELECT id_customer, last_name_cust, first_name_cust, middle_name_cust, type_person_cust, address_cust, phone_cust, DOB_cust FROM Customer_data WHERE (id_customer = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_person_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_person_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Customer_data] SET [last_name_cust] = @last_name_cust, [first_name_cust] = @first_name_cust, [middle_name_cust] = @middle_name_cust, [type_person_cust] = @type_person_cust, [address_cust] = @address_cust, [phone_cust] = @phone_cust, [DOB_cust] = @DOB_cust WHERE (([id_customer] = @Original_id_customer) AND ([last_name_cust] = @Original_last_name_cust) AND ([first_name_cust] = @Original_first_name_cust) AND ([middle_name_cust] = @Original_middle_name_cust) AND ([type_person_cust] = @Original_type_person_cust) AND ([address_cust] = @Original_address_cust) AND ([phone_cust] = @Original_phone_cust) AND ([DOB_cust] = @Original_DOB_cust));
SELECT id_customer, last_name_cust, first_name_cust, middle_name_cust, type_person_cust, address_cust, phone_cust, DOB_cust FROM Customer_data WHERE (id_customer = @id_customer)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_person_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_person_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB_cust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_person_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_person_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB_cust", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB_cust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_customer", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_customer, last_name_cust, first_name_cust, middle_name_cust, type_perso" +
                "n_cust, address_cust, phone_cust, DOB_cust FROM dbo.Customer_data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Customer_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Customer_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Customer_dataDataTable dataTable = new Graduate_tarasikDataSet.Customer_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Customer_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Customer_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id_customer, string Original_last_name_cust, string Original_first_name_cust, string Original_middle_name_cust, string Original_type_person_cust, string Original_address_cust, string Original_phone_cust, string Original_DOB_cust) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_customer));
            if ((Original_last_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_last_name_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_last_name_cust));
            }
            if ((Original_first_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_first_name_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_first_name_cust));
            }
            if ((Original_middle_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_middle_name_cust));
            }
            if ((Original_type_person_cust == null)) {
                throw new global::System.ArgumentNullException("Original_type_person_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_type_person_cust));
            }
            if ((Original_address_cust == null)) {
                throw new global::System.ArgumentNullException("Original_address_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_address_cust));
            }
            if ((Original_phone_cust == null)) {
                throw new global::System.ArgumentNullException("Original_phone_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_phone_cust));
            }
            if ((Original_DOB_cust == null)) {
                throw new global::System.ArgumentNullException("Original_DOB_cust");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOB_cust));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string last_name_cust, string first_name_cust, string middle_name_cust, string type_person_cust, string address_cust, string phone_cust, string DOB_cust) {
            if ((last_name_cust == null)) {
                throw new global::System.ArgumentNullException("last_name_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(last_name_cust));
            }
            if ((first_name_cust == null)) {
                throw new global::System.ArgumentNullException("first_name_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(first_name_cust));
            }
            if ((middle_name_cust == null)) {
                throw new global::System.ArgumentNullException("middle_name_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(middle_name_cust));
            }
            if ((type_person_cust == null)) {
                throw new global::System.ArgumentNullException("type_person_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(type_person_cust));
            }
            if ((address_cust == null)) {
                throw new global::System.ArgumentNullException("address_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(address_cust));
            }
            if ((phone_cust == null)) {
                throw new global::System.ArgumentNullException("phone_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(phone_cust));
            }
            if ((DOB_cust == null)) {
                throw new global::System.ArgumentNullException("DOB_cust");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DOB_cust));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string last_name_cust, 
                    string first_name_cust, 
                    string middle_name_cust, 
                    string type_person_cust, 
                    string address_cust, 
                    string phone_cust, 
                    string DOB_cust, 
                    int Original_id_customer, 
                    string Original_last_name_cust, 
                    string Original_first_name_cust, 
                    string Original_middle_name_cust, 
                    string Original_type_person_cust, 
                    string Original_address_cust, 
                    string Original_phone_cust, 
                    string Original_DOB_cust, 
                    int id_customer) {
            if ((last_name_cust == null)) {
                throw new global::System.ArgumentNullException("last_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(last_name_cust));
            }
            if ((first_name_cust == null)) {
                throw new global::System.ArgumentNullException("first_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(first_name_cust));
            }
            if ((middle_name_cust == null)) {
                throw new global::System.ArgumentNullException("middle_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(middle_name_cust));
            }
            if ((type_person_cust == null)) {
                throw new global::System.ArgumentNullException("type_person_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(type_person_cust));
            }
            if ((address_cust == null)) {
                throw new global::System.ArgumentNullException("address_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(address_cust));
            }
            if ((phone_cust == null)) {
                throw new global::System.ArgumentNullException("phone_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(phone_cust));
            }
            if ((DOB_cust == null)) {
                throw new global::System.ArgumentNullException("DOB_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DOB_cust));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_id_customer));
            if ((Original_last_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_last_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_last_name_cust));
            }
            if ((Original_first_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_first_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_first_name_cust));
            }
            if ((Original_middle_name_cust == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_middle_name_cust));
            }
            if ((Original_type_person_cust == null)) {
                throw new global::System.ArgumentNullException("Original_type_person_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_type_person_cust));
            }
            if ((Original_address_cust == null)) {
                throw new global::System.ArgumentNullException("Original_address_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_address_cust));
            }
            if ((Original_phone_cust == null)) {
                throw new global::System.ArgumentNullException("Original_phone_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_phone_cust));
            }
            if ((Original_DOB_cust == null)) {
                throw new global::System.ArgumentNullException("Original_DOB_cust");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DOB_cust));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(id_customer));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string last_name_cust, string first_name_cust, string middle_name_cust, string type_person_cust, string address_cust, string phone_cust, string DOB_cust, int Original_id_customer, string Original_last_name_cust, string Original_first_name_cust, string Original_middle_name_cust, string Original_type_person_cust, string Original_address_cust, string Original_phone_cust, string Original_DOB_cust) {
            return this.Update(last_name_cust, first_name_cust, middle_name_cust, type_person_cust, address_cust, phone_cust, DOB_cust, Original_id_customer, Original_last_name_cust, Original_first_name_cust, Original_middle_name_cust, Original_type_person_cust, Original_address_cust, Original_phone_cust, Original_DOB_cust, Original_id_customer);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Employee_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Employee_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Employee_data";
            tableMapping.ColumnMappings.Add("id_employee", "id_employee");
            tableMapping.ColumnMappings.Add("last_name_emp", "last_name_emp");
            tableMapping.ColumnMappings.Add("first_name_emp", "first_name_emp");
            tableMapping.ColumnMappings.Add("middle_name_emp", "middle_name_emp");
            tableMapping.ColumnMappings.Add("subunit_emp", "subunit_emp");
            tableMapping.ColumnMappings.Add("phone_emp", "phone_emp");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Employee_data] WHERE (([id_employee] = @Original_id_employee) AND ([last_name_emp] = @Original_last_name_emp) AND ([first_name_emp] = @Original_first_name_emp) AND ([middle_name_emp] = @Original_middle_name_emp) AND ([subunit_emp] = @Original_subunit_emp) AND ([phone_emp] = @Original_phone_emp) AND ([DOB] = @Original_DOB))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subunit_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subunit_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Employee_data] ([last_name_emp], [first_name_emp], [middle_name_emp], [subunit_emp], [phone_emp], [DOB]) VALUES (@last_name_emp, @first_name_emp, @middle_name_emp, @subunit_emp, @phone_emp, @DOB);
SELECT id_employee, last_name_emp, first_name_emp, middle_name_emp, subunit_emp, phone_emp, DOB FROM Employee_data WHERE (id_employee = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subunit_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subunit_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Employee_data] SET [last_name_emp] = @last_name_emp, [first_name_emp] = @first_name_emp, [middle_name_emp] = @middle_name_emp, [subunit_emp] = @subunit_emp, [phone_emp] = @phone_emp, [DOB] = @DOB WHERE (([id_employee] = @Original_id_employee) AND ([last_name_emp] = @Original_last_name_emp) AND ([first_name_emp] = @Original_first_name_emp) AND ([middle_name_emp] = @Original_middle_name_emp) AND ([subunit_emp] = @Original_subunit_emp) AND ([phone_emp] = @Original_phone_emp) AND ([DOB] = @Original_DOB));
SELECT id_employee, last_name_emp, first_name_emp, middle_name_emp, subunit_emp, phone_emp, DOB FROM Employee_data WHERE (id_employee = @id_employee)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subunit_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subunit_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_emp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subunit_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subunit_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_emp", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_emp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_employee", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_employee, last_name_emp, first_name_emp, middle_name_emp, subunit_emp, " +
                "phone_emp, DOB FROM dbo.Employee_data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Employee_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Employee_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Employee_dataDataTable dataTable = new Graduate_tarasikDataSet.Employee_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Employee_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Employee_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id_employee, string Original_last_name_emp, string Original_first_name_emp, string Original_middle_name_emp, string Original_subunit_emp, string Original_phone_emp, string Original_DOB) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_employee));
            if ((Original_last_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_last_name_emp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_last_name_emp));
            }
            if ((Original_first_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_first_name_emp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_first_name_emp));
            }
            if ((Original_middle_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name_emp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_middle_name_emp));
            }
            if ((Original_subunit_emp == null)) {
                throw new global::System.ArgumentNullException("Original_subunit_emp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_subunit_emp));
            }
            if ((Original_phone_emp == null)) {
                throw new global::System.ArgumentNullException("Original_phone_emp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_phone_emp));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DOB));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string last_name_emp, string first_name_emp, string middle_name_emp, string subunit_emp, string phone_emp, string DOB) {
            if ((last_name_emp == null)) {
                throw new global::System.ArgumentNullException("last_name_emp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(last_name_emp));
            }
            if ((first_name_emp == null)) {
                throw new global::System.ArgumentNullException("first_name_emp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(first_name_emp));
            }
            if ((middle_name_emp == null)) {
                throw new global::System.ArgumentNullException("middle_name_emp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(middle_name_emp));
            }
            if ((subunit_emp == null)) {
                throw new global::System.ArgumentNullException("subunit_emp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(subunit_emp));
            }
            if ((phone_emp == null)) {
                throw new global::System.ArgumentNullException("phone_emp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(phone_emp));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DOB));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string last_name_emp, string first_name_emp, string middle_name_emp, string subunit_emp, string phone_emp, string DOB, int Original_id_employee, string Original_last_name_emp, string Original_first_name_emp, string Original_middle_name_emp, string Original_subunit_emp, string Original_phone_emp, string Original_DOB, int id_employee) {
            if ((last_name_emp == null)) {
                throw new global::System.ArgumentNullException("last_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(last_name_emp));
            }
            if ((first_name_emp == null)) {
                throw new global::System.ArgumentNullException("first_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(first_name_emp));
            }
            if ((middle_name_emp == null)) {
                throw new global::System.ArgumentNullException("middle_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(middle_name_emp));
            }
            if ((subunit_emp == null)) {
                throw new global::System.ArgumentNullException("subunit_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(subunit_emp));
            }
            if ((phone_emp == null)) {
                throw new global::System.ArgumentNullException("phone_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(phone_emp));
            }
            if ((DOB == null)) {
                throw new global::System.ArgumentNullException("DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DOB));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id_employee));
            if ((Original_last_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_last_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_last_name_emp));
            }
            if ((Original_first_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_first_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_first_name_emp));
            }
            if ((Original_middle_name_emp == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_middle_name_emp));
            }
            if ((Original_subunit_emp == null)) {
                throw new global::System.ArgumentNullException("Original_subunit_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_subunit_emp));
            }
            if ((Original_phone_emp == null)) {
                throw new global::System.ArgumentNullException("Original_phone_emp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_phone_emp));
            }
            if ((Original_DOB == null)) {
                throw new global::System.ArgumentNullException("Original_DOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DOB));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(id_employee));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string last_name_emp, string first_name_emp, string middle_name_emp, string subunit_emp, string phone_emp, string DOB, int Original_id_employee, string Original_last_name_emp, string Original_first_name_emp, string Original_middle_name_emp, string Original_subunit_emp, string Original_phone_emp, string Original_DOB) {
            return this.Update(last_name_emp, first_name_emp, middle_name_emp, subunit_emp, phone_emp, DOB, Original_id_employee, Original_last_name_emp, Original_first_name_emp, Original_middle_name_emp, Original_subunit_emp, Original_phone_emp, Original_DOB, Original_id_employee);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Inspection_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Inspection_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Inspection_data";
            tableMapping.ColumnMappings.Add("id_inspection", "id_inspection");
            tableMapping.ColumnMappings.Add("type_insur", "type_insur");
            tableMapping.ColumnMappings.Add("subtype_insur", "subtype_insur");
            tableMapping.ColumnMappings.Add("number_inspect", "number_inspect");
            tableMapping.ColumnMappings.Add("number_insur", "number_insur");
            tableMapping.ColumnMappings.Add("type_inspect", "type_inspect");
            tableMapping.ColumnMappings.Add("organization_inspect", "organization_inspect");
            tableMapping.ColumnMappings.Add("FIO_expert", "FIO_expert");
            tableMapping.ColumnMappings.Add("FIO_expert_manager", "FIO_expert_manager");
            tableMapping.ColumnMappings.Add("phone_expert_manager", "phone_expert_manager");
            tableMapping.ColumnMappings.Add("FIO_employee", "FIO_employee");
            tableMapping.ColumnMappings.Add("phone_employee", "phone_employee");
            tableMapping.ColumnMappings.Add("type_victim", "type_victim");
            tableMapping.ColumnMappings.Add("id_insurance", "id_insurance");
            tableMapping.ColumnMappings.Add("duration_inspection", "duration_inspection");
            tableMapping.ColumnMappings.Add("FIO_start_expert_manage", "FIO_start_expert_manage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Inspection_data] WHERE (([id_inspection] = @Original_id_inspection) AND ([type_insur] = @Original_type_insur) AND ([subtype_insur] = @Original_subtype_insur) AND ([number_inspect] = @Original_number_inspect) AND ([number_insur] = @Original_number_insur) AND ([type_inspect] = @Original_type_inspect) AND ([organization_inspect] = @Original_organization_inspect) AND ([FIO_expert] = @Original_FIO_expert) AND ([FIO_expert_manager] = @Original_FIO_expert_manager) AND ([phone_expert_manager] = @Original_phone_expert_manager) AND ([FIO_employee] = @Original_FIO_employee) AND ([phone_employee] = @Original_phone_employee) AND ([type_victim] = @Original_type_victim) AND ([id_insurance] = @Original_id_insurance) AND ([duration_inspection] = @Original_duration_inspection) AND ([FIO_start_expert_manage] = @Original_FIO_start_expert_manage))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_inspection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_inspection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_organization_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "organization_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_expert", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_expert_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_victim", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_victim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_duration_inspection", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "duration_inspection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_start_expert_manage", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_start_expert_manage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Inspection_data] ([type_insur], [subtype_insur], [number_inspect], [number_insur], [type_inspect], [organization_inspect], [FIO_expert], [FIO_expert_manager], [phone_expert_manager], [FIO_employee], [phone_employee], [type_victim], [id_insurance], [duration_inspection], [FIO_start_expert_manage]) VALUES (@type_insur, @subtype_insur, @number_inspect, @number_insur, @type_inspect, @organization_inspect, @FIO_expert, @FIO_expert_manager, @phone_expert_manager, @FIO_employee, @phone_employee, @type_victim, @id_insurance, @duration_inspection, @FIO_start_expert_manage);
SELECT id_inspection, type_insur, subtype_insur, number_inspect, number_insur, type_inspect, organization_inspect, FIO_expert, FIO_expert_manager, phone_expert_manager, FIO_employee, phone_employee, type_victim, id_insurance, duration_inspection, FIO_start_expert_manage FROM Inspection_data WHERE (id_insurance = @id_insurance)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@organization_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "organization_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_expert", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_expert_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_victim", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_victim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duration_inspection", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "duration_inspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_start_expert_manage", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_start_expert_manage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Inspection_data] SET [type_insur] = @type_insur, [subtype_insur] = " +
                "@subtype_insur, [number_inspect] = @number_inspect, [number_insur] = @number_ins" +
                "ur, [type_inspect] = @type_inspect, [organization_inspect] = @organization_inspe" +
                "ct, [FIO_expert] = @FIO_expert, [FIO_expert_manager] = @FIO_expert_manager, [pho" +
                "ne_expert_manager] = @phone_expert_manager, [FIO_employee] = @FIO_employee, [pho" +
                "ne_employee] = @phone_employee, [type_victim] = @type_victim, [id_insurance] = @" +
                "id_insurance, [duration_inspection] = @duration_inspection, [FIO_start_expert_ma" +
                "nage] = @FIO_start_expert_manage WHERE (([id_inspection] = @Original_id_inspecti" +
                "on) AND ([type_insur] = @Original_type_insur) AND ([subtype_insur] = @Original_s" +
                "ubtype_insur) AND ([number_inspect] = @Original_number_inspect) AND ([number_ins" +
                "ur] = @Original_number_insur) AND ([type_inspect] = @Original_type_inspect) AND " +
                "([organization_inspect] = @Original_organization_inspect) AND ([FIO_expert] = @O" +
                "riginal_FIO_expert) AND ([FIO_expert_manager] = @Original_FIO_expert_manager) AN" +
                "D ([phone_expert_manager] = @Original_phone_expert_manager) AND ([FIO_employee] " +
                "= @Original_FIO_employee) AND ([phone_employee] = @Original_phone_employee) AND " +
                "([type_victim] = @Original_type_victim) AND ([id_insurance] = @Original_id_insur" +
                "ance) AND ([duration_inspection] = @Original_duration_inspection) AND ([FIO_star" +
                "t_expert_manage] = @Original_FIO_start_expert_manage));\r\nSELECT id_inspection, t" +
                "ype_insur, subtype_insur, number_inspect, number_insur, type_inspect, organizati" +
                "on_inspect, FIO_expert, FIO_expert_manager, phone_expert_manager, FIO_employee, " +
                "phone_employee, type_victim, id_insurance, duration_inspection, FIO_start_expert" +
                "_manage FROM Inspection_data WHERE (id_insurance = @id_insurance)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@organization_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "organization_inspect", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_expert", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_expert_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_victim", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_victim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duration_inspection", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "duration_inspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO_start_expert_manage", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_start_expert_manage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_inspection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_inspection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_organization_inspect", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "organization_inspect", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_expert", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_expert_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_expert_manager", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_expert_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_victim", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_victim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_duration_inspection", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "duration_inspection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO_start_expert_manage", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO_start_expert_manage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id_inspection, type_insur, subtype_insur, number_inspect, number_insur, type_inspect, organization_inspect, FIO_expert, FIO_expert_manager, phone_expert_manager, FIO_employee, phone_employee, type_victim, id_insurance, duration_inspection, FIO_start_expert_manage FROM dbo.Inspection_data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Inspection_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Inspection_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Inspection_dataDataTable dataTable = new Graduate_tarasikDataSet.Inspection_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Inspection_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Inspection_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id_inspection, 
                    string Original_type_insur, 
                    string Original_subtype_insur, 
                    string Original_number_inspect, 
                    string Original_number_insur, 
                    string Original_type_inspect, 
                    string Original_organization_inspect, 
                    string Original_FIO_expert, 
                    string Original_FIO_expert_manager, 
                    string Original_phone_expert_manager, 
                    string Original_FIO_employee, 
                    string Original_phone_employee, 
                    string Original_type_victim, 
                    int Original_id_insurance, 
                    string Original_duration_inspection, 
                    string Original_FIO_start_expert_manage) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_inspection));
            if ((Original_type_insur == null)) {
                throw new global::System.ArgumentNullException("Original_type_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_type_insur));
            }
            if ((Original_subtype_insur == null)) {
                throw new global::System.ArgumentNullException("Original_subtype_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_subtype_insur));
            }
            if ((Original_number_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_number_inspect");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_number_inspect));
            }
            if ((Original_number_insur == null)) {
                throw new global::System.ArgumentNullException("Original_number_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_number_insur));
            }
            if ((Original_type_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_type_inspect");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_type_inspect));
            }
            if ((Original_organization_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_organization_inspect");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_organization_inspect));
            }
            if ((Original_FIO_expert == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_expert");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_FIO_expert));
            }
            if ((Original_FIO_expert_manager == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_expert_manager");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FIO_expert_manager));
            }
            if ((Original_phone_expert_manager == null)) {
                throw new global::System.ArgumentNullException("Original_phone_expert_manager");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_phone_expert_manager));
            }
            if ((Original_FIO_employee == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_employee");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FIO_employee));
            }
            if ((Original_phone_employee == null)) {
                throw new global::System.ArgumentNullException("Original_phone_employee");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_phone_employee));
            }
            if ((Original_type_victim == null)) {
                throw new global::System.ArgumentNullException("Original_type_victim");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_type_victim));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_id_insurance));
            if ((Original_duration_inspection == null)) {
                throw new global::System.ArgumentNullException("Original_duration_inspection");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_duration_inspection));
            }
            if ((Original_FIO_start_expert_manage == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_start_expert_manage");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_FIO_start_expert_manage));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string type_insur, string subtype_insur, string number_inspect, string number_insur, string type_inspect, string organization_inspect, string FIO_expert, string FIO_expert_manager, string phone_expert_manager, string FIO_employee, string phone_employee, string type_victim, int id_insurance, string duration_inspection, string FIO_start_expert_manage) {
            if ((type_insur == null)) {
                throw new global::System.ArgumentNullException("type_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(type_insur));
            }
            if ((subtype_insur == null)) {
                throw new global::System.ArgumentNullException("subtype_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(subtype_insur));
            }
            if ((number_inspect == null)) {
                throw new global::System.ArgumentNullException("number_inspect");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(number_inspect));
            }
            if ((number_insur == null)) {
                throw new global::System.ArgumentNullException("number_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(number_insur));
            }
            if ((type_inspect == null)) {
                throw new global::System.ArgumentNullException("type_inspect");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(type_inspect));
            }
            if ((organization_inspect == null)) {
                throw new global::System.ArgumentNullException("organization_inspect");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(organization_inspect));
            }
            if ((FIO_expert == null)) {
                throw new global::System.ArgumentNullException("FIO_expert");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FIO_expert));
            }
            if ((FIO_expert_manager == null)) {
                throw new global::System.ArgumentNullException("FIO_expert_manager");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FIO_expert_manager));
            }
            if ((phone_expert_manager == null)) {
                throw new global::System.ArgumentNullException("phone_expert_manager");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(phone_expert_manager));
            }
            if ((FIO_employee == null)) {
                throw new global::System.ArgumentNullException("FIO_employee");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(FIO_employee));
            }
            if ((phone_employee == null)) {
                throw new global::System.ArgumentNullException("phone_employee");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(phone_employee));
            }
            if ((type_victim == null)) {
                throw new global::System.ArgumentNullException("type_victim");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(type_victim));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(id_insurance));
            if ((duration_inspection == null)) {
                throw new global::System.ArgumentNullException("duration_inspection");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(duration_inspection));
            }
            if ((FIO_start_expert_manage == null)) {
                throw new global::System.ArgumentNullException("FIO_start_expert_manage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FIO_start_expert_manage));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string type_insur, 
                    string subtype_insur, 
                    string number_inspect, 
                    string number_insur, 
                    string type_inspect, 
                    string organization_inspect, 
                    string FIO_expert, 
                    string FIO_expert_manager, 
                    string phone_expert_manager, 
                    string FIO_employee, 
                    string phone_employee, 
                    string type_victim, 
                    int id_insurance, 
                    string duration_inspection, 
                    string FIO_start_expert_manage, 
                    int Original_id_inspection, 
                    string Original_type_insur, 
                    string Original_subtype_insur, 
                    string Original_number_inspect, 
                    string Original_number_insur, 
                    string Original_type_inspect, 
                    string Original_organization_inspect, 
                    string Original_FIO_expert, 
                    string Original_FIO_expert_manager, 
                    string Original_phone_expert_manager, 
                    string Original_FIO_employee, 
                    string Original_phone_employee, 
                    string Original_type_victim, 
                    int Original_id_insurance, 
                    string Original_duration_inspection, 
                    string Original_FIO_start_expert_manage) {
            if ((type_insur == null)) {
                throw new global::System.ArgumentNullException("type_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(type_insur));
            }
            if ((subtype_insur == null)) {
                throw new global::System.ArgumentNullException("subtype_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(subtype_insur));
            }
            if ((number_inspect == null)) {
                throw new global::System.ArgumentNullException("number_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(number_inspect));
            }
            if ((number_insur == null)) {
                throw new global::System.ArgumentNullException("number_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(number_insur));
            }
            if ((type_inspect == null)) {
                throw new global::System.ArgumentNullException("type_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(type_inspect));
            }
            if ((organization_inspect == null)) {
                throw new global::System.ArgumentNullException("organization_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(organization_inspect));
            }
            if ((FIO_expert == null)) {
                throw new global::System.ArgumentNullException("FIO_expert");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FIO_expert));
            }
            if ((FIO_expert_manager == null)) {
                throw new global::System.ArgumentNullException("FIO_expert_manager");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(FIO_expert_manager));
            }
            if ((phone_expert_manager == null)) {
                throw new global::System.ArgumentNullException("phone_expert_manager");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(phone_expert_manager));
            }
            if ((FIO_employee == null)) {
                throw new global::System.ArgumentNullException("FIO_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(FIO_employee));
            }
            if ((phone_employee == null)) {
                throw new global::System.ArgumentNullException("phone_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(phone_employee));
            }
            if ((type_victim == null)) {
                throw new global::System.ArgumentNullException("type_victim");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(type_victim));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(id_insurance));
            if ((duration_inspection == null)) {
                throw new global::System.ArgumentNullException("duration_inspection");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(duration_inspection));
            }
            if ((FIO_start_expert_manage == null)) {
                throw new global::System.ArgumentNullException("FIO_start_expert_manage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FIO_start_expert_manage));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_id_inspection));
            if ((Original_type_insur == null)) {
                throw new global::System.ArgumentNullException("Original_type_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_type_insur));
            }
            if ((Original_subtype_insur == null)) {
                throw new global::System.ArgumentNullException("Original_subtype_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_subtype_insur));
            }
            if ((Original_number_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_number_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_number_inspect));
            }
            if ((Original_number_insur == null)) {
                throw new global::System.ArgumentNullException("Original_number_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_number_insur));
            }
            if ((Original_type_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_type_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_type_inspect));
            }
            if ((Original_organization_inspect == null)) {
                throw new global::System.ArgumentNullException("Original_organization_inspect");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_organization_inspect));
            }
            if ((Original_FIO_expert == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_expert");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_FIO_expert));
            }
            if ((Original_FIO_expert_manager == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_expert_manager");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_FIO_expert_manager));
            }
            if ((Original_phone_expert_manager == null)) {
                throw new global::System.ArgumentNullException("Original_phone_expert_manager");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_phone_expert_manager));
            }
            if ((Original_FIO_employee == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_FIO_employee));
            }
            if ((Original_phone_employee == null)) {
                throw new global::System.ArgumentNullException("Original_phone_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_phone_employee));
            }
            if ((Original_type_victim == null)) {
                throw new global::System.ArgumentNullException("Original_type_victim");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_type_victim));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_id_insurance));
            if ((Original_duration_inspection == null)) {
                throw new global::System.ArgumentNullException("Original_duration_inspection");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_duration_inspection));
            }
            if ((Original_FIO_start_expert_manage == null)) {
                throw new global::System.ArgumentNullException("Original_FIO_start_expert_manage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_FIO_start_expert_manage));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string type_insur, 
                    string subtype_insur, 
                    string number_inspect, 
                    string number_insur, 
                    string type_inspect, 
                    string organization_inspect, 
                    string FIO_expert, 
                    string FIO_expert_manager, 
                    string phone_expert_manager, 
                    string FIO_employee, 
                    string phone_employee, 
                    string type_victim, 
                    string duration_inspection, 
                    string FIO_start_expert_manage, 
                    int Original_id_inspection, 
                    string Original_type_insur, 
                    string Original_subtype_insur, 
                    string Original_number_inspect, 
                    string Original_number_insur, 
                    string Original_type_inspect, 
                    string Original_organization_inspect, 
                    string Original_FIO_expert, 
                    string Original_FIO_expert_manager, 
                    string Original_phone_expert_manager, 
                    string Original_FIO_employee, 
                    string Original_phone_employee, 
                    string Original_type_victim, 
                    int Original_id_insurance, 
                    string Original_duration_inspection, 
                    string Original_FIO_start_expert_manage) {
            return this.Update(type_insur, subtype_insur, number_inspect, number_insur, type_inspect, organization_inspect, FIO_expert, FIO_expert_manager, phone_expert_manager, FIO_employee, phone_employee, type_victim, Original_id_insurance, duration_inspection, FIO_start_expert_manage, Original_id_inspection, Original_type_insur, Original_subtype_insur, Original_number_inspect, Original_number_insur, Original_type_inspect, Original_organization_inspect, Original_FIO_expert, Original_FIO_expert_manager, Original_phone_expert_manager, Original_FIO_employee, Original_phone_employee, Original_type_victim, Original_id_insurance, Original_duration_inspection, Original_FIO_start_expert_manage);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Insurance_contractTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Insurance_contractTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Insurance_contract";
            tableMapping.ColumnMappings.Add("id_insurance", "id_insurance");
            tableMapping.ColumnMappings.Add("type_insur", "type_insur");
            tableMapping.ColumnMappings.Add("subtype_insur", "subtype_insur");
            tableMapping.ColumnMappings.Add("number_insur", "number_insur");
            tableMapping.ColumnMappings.Add("object_insur", "object_insur");
            tableMapping.ColumnMappings.Add("count_insur_summ", "count_insur_summ");
            tableMapping.ColumnMappings.Add("summ_insur_payment", "summ_insur_payment");
            tableMapping.ColumnMappings.Add("starting_insur", "starting_insur");
            tableMapping.ColumnMappings.Add("ending_insur", "ending_insur");
            tableMapping.ColumnMappings.Add("id_employee", "id_employee");
            tableMapping.ColumnMappings.Add("id_customer", "id_customer");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Insurance_contract] WHERE (([id_insurance] = @Original_id_insurance) AND ([type_insur] = @Original_type_insur) AND ([subtype_insur] = @Original_subtype_insur) AND ([number_insur] = @Original_number_insur) AND ([object_insur] = @Original_object_insur) AND ([count_insur_summ] = @Original_count_insur_summ) AND ([summ_insur_payment] = @Original_summ_insur_payment) AND ([starting_insur] = @Original_starting_insur) AND ([ending_insur] = @Original_ending_insur) AND ([id_employee] = @Original_id_employee) AND ([id_customer] = @Original_id_customer))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_count_insur_summ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "count_insur_summ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_summ_insur_payment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "summ_insur_payment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_starting_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "starting_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ending_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ending_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Insurance_contract] ([type_insur], [subtype_insur], [number_insur], [object_insur], [count_insur_summ], [summ_insur_payment], [starting_insur], [ending_insur], [id_employee], [id_customer]) VALUES (@type_insur, @subtype_insur, @number_insur, @object_insur, @count_insur_summ, @summ_insur_payment, @starting_insur, @ending_insur, @id_employee, @id_customer);
SELECT id_insurance, type_insur, subtype_insur, number_insur, object_insur, count_insur_summ, summ_insur_payment, starting_insur, ending_insur, id_employee, id_customer FROM Insurance_contract WHERE (id_insurance = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@count_insur_summ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "count_insur_summ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@summ_insur_payment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "summ_insur_payment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@starting_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "starting_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ending_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ending_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Insurance_contract] SET [type_insur] = @type_insur, [subtype_insur] = @subtype_insur, [number_insur] = @number_insur, [object_insur] = @object_insur, [count_insur_summ] = @count_insur_summ, [summ_insur_payment] = @summ_insur_payment, [starting_insur] = @starting_insur, [ending_insur] = @ending_insur, [id_employee] = @id_employee, [id_customer] = @id_customer WHERE (([id_insurance] = @Original_id_insurance) AND ([type_insur] = @Original_type_insur) AND ([subtype_insur] = @Original_subtype_insur) AND ([number_insur] = @Original_number_insur) AND ([object_insur] = @Original_object_insur) AND ([count_insur_summ] = @Original_count_insur_summ) AND ([summ_insur_payment] = @Original_summ_insur_payment) AND ([starting_insur] = @Original_starting_insur) AND ([ending_insur] = @Original_ending_insur) AND ([id_employee] = @Original_id_employee) AND ([id_customer] = @Original_id_customer));
SELECT id_insurance, type_insur, subtype_insur, number_insur, object_insur, count_insur_summ, summ_insur_payment, starting_insur, ending_insur, id_employee, id_customer FROM Insurance_contract WHERE (id_insurance = @id_insurance)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@object_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@count_insur_summ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "count_insur_summ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@summ_insur_payment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "summ_insur_payment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@starting_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "starting_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ending_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ending_insur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_insurance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtype_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtype_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_number_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "number_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_object_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "object_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_count_insur_summ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "count_insur_summ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_summ_insur_payment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "summ_insur_payment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_starting_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "starting_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ending_insur", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ending_insur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_customer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_insurance", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id_insurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_insurance, type_insur, subtype_insur, number_insur, object_insur, count" +
                "_insur_summ, summ_insur_payment, starting_insur, ending_insur, id_employee, id_c" +
                "ustomer FROM dbo.Insurance_contract";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Insurance_contractDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Insurance_contractDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Insurance_contractDataTable dataTable = new Graduate_tarasikDataSet.Insurance_contractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Insurance_contractDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Insurance_contract");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id_insurance, string Original_type_insur, string Original_subtype_insur, string Original_number_insur, string Original_object_insur, double Original_count_insur_summ, double Original_summ_insur_payment, string Original_starting_insur, string Original_ending_insur, int Original_id_employee, int Original_id_customer) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_insurance));
            if ((Original_type_insur == null)) {
                throw new global::System.ArgumentNullException("Original_type_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_type_insur));
            }
            if ((Original_subtype_insur == null)) {
                throw new global::System.ArgumentNullException("Original_subtype_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_subtype_insur));
            }
            if ((Original_number_insur == null)) {
                throw new global::System.ArgumentNullException("Original_number_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_number_insur));
            }
            if ((Original_object_insur == null)) {
                throw new global::System.ArgumentNullException("Original_object_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_object_insur));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_count_insur_summ));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_summ_insur_payment));
            if ((Original_starting_insur == null)) {
                throw new global::System.ArgumentNullException("Original_starting_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_starting_insur));
            }
            if ((Original_ending_insur == null)) {
                throw new global::System.ArgumentNullException("Original_ending_insur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ending_insur));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_id_employee));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_id_customer));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string type_insur, string subtype_insur, string number_insur, string object_insur, double count_insur_summ, double summ_insur_payment, string starting_insur, string ending_insur, int id_employee, int id_customer) {
            if ((type_insur == null)) {
                throw new global::System.ArgumentNullException("type_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(type_insur));
            }
            if ((subtype_insur == null)) {
                throw new global::System.ArgumentNullException("subtype_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(subtype_insur));
            }
            if ((number_insur == null)) {
                throw new global::System.ArgumentNullException("number_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(number_insur));
            }
            if ((object_insur == null)) {
                throw new global::System.ArgumentNullException("object_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(object_insur));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(count_insur_summ));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(summ_insur_payment));
            if ((starting_insur == null)) {
                throw new global::System.ArgumentNullException("starting_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(starting_insur));
            }
            if ((ending_insur == null)) {
                throw new global::System.ArgumentNullException("ending_insur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ending_insur));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(id_employee));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(id_customer));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string type_insur, 
                    string subtype_insur, 
                    string number_insur, 
                    string object_insur, 
                    double count_insur_summ, 
                    double summ_insur_payment, 
                    string starting_insur, 
                    string ending_insur, 
                    int id_employee, 
                    int id_customer, 
                    int Original_id_insurance, 
                    string Original_type_insur, 
                    string Original_subtype_insur, 
                    string Original_number_insur, 
                    string Original_object_insur, 
                    double Original_count_insur_summ, 
                    double Original_summ_insur_payment, 
                    string Original_starting_insur, 
                    string Original_ending_insur, 
                    int Original_id_employee, 
                    int Original_id_customer, 
                    int id_insurance) {
            if ((type_insur == null)) {
                throw new global::System.ArgumentNullException("type_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(type_insur));
            }
            if ((subtype_insur == null)) {
                throw new global::System.ArgumentNullException("subtype_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(subtype_insur));
            }
            if ((number_insur == null)) {
                throw new global::System.ArgumentNullException("number_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(number_insur));
            }
            if ((object_insur == null)) {
                throw new global::System.ArgumentNullException("object_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(object_insur));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(count_insur_summ));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(summ_insur_payment));
            if ((starting_insur == null)) {
                throw new global::System.ArgumentNullException("starting_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(starting_insur));
            }
            if ((ending_insur == null)) {
                throw new global::System.ArgumentNullException("ending_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ending_insur));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(id_employee));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(id_customer));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_id_insurance));
            if ((Original_type_insur == null)) {
                throw new global::System.ArgumentNullException("Original_type_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_type_insur));
            }
            if ((Original_subtype_insur == null)) {
                throw new global::System.ArgumentNullException("Original_subtype_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_subtype_insur));
            }
            if ((Original_number_insur == null)) {
                throw new global::System.ArgumentNullException("Original_number_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_number_insur));
            }
            if ((Original_object_insur == null)) {
                throw new global::System.ArgumentNullException("Original_object_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_object_insur));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_count_insur_summ));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_summ_insur_payment));
            if ((Original_starting_insur == null)) {
                throw new global::System.ArgumentNullException("Original_starting_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_starting_insur));
            }
            if ((Original_ending_insur == null)) {
                throw new global::System.ArgumentNullException("Original_ending_insur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ending_insur));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_id_employee));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_id_customer));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(id_insurance));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string type_insur, 
                    string subtype_insur, 
                    string number_insur, 
                    string object_insur, 
                    double count_insur_summ, 
                    double summ_insur_payment, 
                    string starting_insur, 
                    string ending_insur, 
                    int id_employee, 
                    int id_customer, 
                    int Original_id_insurance, 
                    string Original_type_insur, 
                    string Original_subtype_insur, 
                    string Original_number_insur, 
                    string Original_object_insur, 
                    double Original_count_insur_summ, 
                    double Original_summ_insur_payment, 
                    string Original_starting_insur, 
                    string Original_ending_insur, 
                    int Original_id_employee, 
                    int Original_id_customer) {
            return this.Update(type_insur, subtype_insur, number_insur, object_insur, count_insur_summ, summ_insur_payment, starting_insur, ending_insur, id_employee, id_customer, Original_id_insurance, Original_type_insur, Original_subtype_insur, Original_number_insur, Original_object_insur, Original_count_insur_summ, Original_summ_insur_payment, Original_starting_insur, Original_ending_insur, Original_id_employee, Original_id_customer, Original_id_insurance);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Message_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Message_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Message_data";
            tableMapping.ColumnMappings.Add("id_message", "id_message");
            tableMapping.ColumnMappings.Add("id_user", "id_user");
            tableMapping.ColumnMappings.Add("id_employee", "id_employee");
            tableMapping.ColumnMappings.Add("FIO", "FIO");
            tableMapping.ColumnMappings.Add("Cost", "Cost");
            tableMapping.ColumnMappings.Add("Text_message", "Text_message");
            tableMapping.ColumnMappings.Add("add_documents", "add_documents");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Message_data] WHERE (([id_message] = @Original_id_message) AND ([id_user] = @Original_id_user) AND ([id_employee] = @Original_id_employee) AND ([FIO] = @Original_FIO) AND ([Cost] = @Original_Cost) AND ([Text_message] = @Original_Text_message) AND ([add_documents] = @Original_add_documents))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Text_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_add_documents", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "add_documents", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Message_data] ([id_message], [id_user], [id_employee], [FIO], [Cost], [Text_message], [add_documents]) VALUES (@id_message, @id_user, @id_employee, @FIO, @Cost, @Text_message, @add_documents);
SELECT id_message, id_user, id_employee, FIO, Cost, Text_message, add_documents FROM Message_data WHERE (id_message = @id_message)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Text_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@add_documents", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "add_documents", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Message_data] SET [id_message] = @id_message, [id_user] = @id_user, [id_employee] = @id_employee, [FIO] = @FIO, [Cost] = @Cost, [Text_message] = @Text_message, [add_documents] = @add_documents WHERE (([id_message] = @Original_id_message) AND ([id_user] = @Original_id_user) AND ([id_employee] = @Original_id_employee) AND ([FIO] = @Original_FIO) AND ([Cost] = @Original_Cost) AND ([Text_message] = @Original_Text_message) AND ([add_documents] = @Original_add_documents));
SELECT id_message, id_user, id_employee, FIO, Cost, Text_message, add_documents FROM Message_data WHERE (id_message = @id_message)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIO", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Text_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@add_documents", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "add_documents", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_employee", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_employee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIO", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Text_message", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Text_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_add_documents", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "add_documents", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_message, id_user, id_employee, FIO, Cost, Text_message, add_documents F" +
                "ROM dbo.Message_data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Message_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Message_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Message_dataDataTable dataTable = new Graduate_tarasikDataSet.Message_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Message_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Message_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_id_message, string Original_id_user, string Original_id_employee, string Original_FIO, string Original_Cost, string Original_Text_message, string Original_add_documents) {
            if ((Original_id_message == null)) {
                throw new global::System.ArgumentNullException("Original_id_message");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_id_message));
            }
            if ((Original_id_user == null)) {
                throw new global::System.ArgumentNullException("Original_id_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_id_user));
            }
            if ((Original_id_employee == null)) {
                throw new global::System.ArgumentNullException("Original_id_employee");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_id_employee));
            }
            if ((Original_FIO == null)) {
                throw new global::System.ArgumentNullException("Original_FIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_FIO));
            }
            if ((Original_Cost == null)) {
                throw new global::System.ArgumentNullException("Original_Cost");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Cost));
            }
            if ((Original_Text_message == null)) {
                throw new global::System.ArgumentNullException("Original_Text_message");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Text_message));
            }
            if ((Original_add_documents == null)) {
                throw new global::System.ArgumentNullException("Original_add_documents");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_add_documents));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string id_message, string id_user, string id_employee, string FIO, string Cost, string Text_message, string add_documents) {
            if ((id_message == null)) {
                throw new global::System.ArgumentNullException("id_message");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id_message));
            }
            if ((id_user == null)) {
                throw new global::System.ArgumentNullException("id_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(id_user));
            }
            if ((id_employee == null)) {
                throw new global::System.ArgumentNullException("id_employee");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(id_employee));
            }
            if ((FIO == null)) {
                throw new global::System.ArgumentNullException("FIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FIO));
            }
            if ((Cost == null)) {
                throw new global::System.ArgumentNullException("Cost");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Cost));
            }
            if ((Text_message == null)) {
                throw new global::System.ArgumentNullException("Text_message");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Text_message));
            }
            if ((add_documents == null)) {
                throw new global::System.ArgumentNullException("add_documents");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(add_documents));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string id_message, string id_user, string id_employee, string FIO, string Cost, string Text_message, string add_documents, string Original_id_message, string Original_id_user, string Original_id_employee, string Original_FIO, string Original_Cost, string Original_Text_message, string Original_add_documents) {
            if ((id_message == null)) {
                throw new global::System.ArgumentNullException("id_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(id_message));
            }
            if ((id_user == null)) {
                throw new global::System.ArgumentNullException("id_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(id_user));
            }
            if ((id_employee == null)) {
                throw new global::System.ArgumentNullException("id_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(id_employee));
            }
            if ((FIO == null)) {
                throw new global::System.ArgumentNullException("FIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FIO));
            }
            if ((Cost == null)) {
                throw new global::System.ArgumentNullException("Cost");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Cost));
            }
            if ((Text_message == null)) {
                throw new global::System.ArgumentNullException("Text_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Text_message));
            }
            if ((add_documents == null)) {
                throw new global::System.ArgumentNullException("add_documents");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(add_documents));
            }
            if ((Original_id_message == null)) {
                throw new global::System.ArgumentNullException("Original_id_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_id_message));
            }
            if ((Original_id_user == null)) {
                throw new global::System.ArgumentNullException("Original_id_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_id_user));
            }
            if ((Original_id_employee == null)) {
                throw new global::System.ArgumentNullException("Original_id_employee");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_id_employee));
            }
            if ((Original_FIO == null)) {
                throw new global::System.ArgumentNullException("Original_FIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_FIO));
            }
            if ((Original_Cost == null)) {
                throw new global::System.ArgumentNullException("Original_Cost");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Cost));
            }
            if ((Original_Text_message == null)) {
                throw new global::System.ArgumentNullException("Original_Text_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Text_message));
            }
            if ((Original_add_documents == null)) {
                throw new global::System.ArgumentNullException("Original_add_documents");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_add_documents));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string id_user, string id_employee, string FIO, string Cost, string Text_message, string add_documents, string Original_id_message, string Original_id_user, string Original_id_employee, string Original_FIO, string Original_Cost, string Original_Text_message, string Original_add_documents) {
            return this.Update(Original_id_message, id_user, id_employee, FIO, Cost, Text_message, add_documents, Original_id_message, Original_id_user, Original_id_employee, Original_FIO, Original_Cost, Original_Text_message, Original_add_documents);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Service_stationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Service_stationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Service_station";
            tableMapping.ColumnMappings.Add("id_service", "id_service");
            tableMapping.ColumnMappings.Add("name_serv", "name_serv");
            tableMapping.ColumnMappings.Add("legal_address", "legal_address");
            tableMapping.ColumnMappings.Add("actual_address", "actual_address");
            tableMapping.ColumnMappings.Add("code_UNP", "code_UNP");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("e-mail", "e-mail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Service_station] ([name_serv], [legal_address], [actual_addres" +
                "s], [code_UNP], [phone], [fax], [e-mail]) VALUES (@name_serv, @legal_address, @a" +
                "ctual_address, @code_UNP, @phone, @fax, @p1)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_serv", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_serv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@legal_address", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "legal_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@actual_address", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "actual_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code_UNP", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "code_UNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fax", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e-mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_service, name_serv, legal_address, actual_address, code_UNP, phone, fax" +
                ", [e-mail] FROM dbo.Service_station";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.Service_stationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.Service_stationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.Service_stationDataTable dataTable = new Graduate_tarasikDataSet.Service_stationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.Service_stationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Service_station");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string name_serv, string legal_address, string actual_address, string code_UNP, string phone, string fax, string p1) {
            if ((name_serv == null)) {
                throw new global::System.ArgumentNullException("name_serv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name_serv));
            }
            if ((legal_address == null)) {
                throw new global::System.ArgumentNullException("legal_address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(legal_address));
            }
            if ((actual_address == null)) {
                throw new global::System.ArgumentNullException("actual_address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(actual_address));
            }
            if ((code_UNP == null)) {
                throw new global::System.ArgumentNullException("code_UNP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(code_UNP));
            }
            if ((phone == null)) {
                throw new global::System.ArgumentNullException("phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(phone));
            }
            if ((fax == null)) {
                throw new global::System.ArgumentNullException("fax");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(fax));
            }
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class User_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public User_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "User_data";
            tableMapping.ColumnMappings.Add("id_user", "id_user");
            tableMapping.ColumnMappings.Add("login_user", "login_user");
            tableMapping.ColumnMappings.Add("pass_user", "pass_user");
            tableMapping.ColumnMappings.Add("type_user", "type_user");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("middle_name", "middle_name");
            tableMapping.ColumnMappings.Add("name_filial", "name_filial");
            tableMapping.ColumnMappings.Add("position_user", "position_user");
            tableMapping.ColumnMappings.Add("block_account", "block_account");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[User_data] WHERE (([id_user] = @Original_id_user) AND ([login_user] = @Original_login_user) AND ([pass_user] = @Original_pass_user) AND ([type_user] = @Original_type_user) AND ([last_name] = @Original_last_name) AND ([first_name] = @Original_first_name) AND ([middle_name] = @Original_middle_name) AND ([name_filial] = @Original_name_filial) AND ([position_user] = @Original_position_user) AND ([block_account] = @Original_block_account))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_login_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "login_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pass_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pass_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_filial", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_filial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_position_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_block_account", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "block_account", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[User_data] ([login_user], [pass_user], [type_user], [last_name], [first_name], [middle_name], [name_filial], [position_user], [block_account]) VALUES (@login_user, @pass_user, @type_user, @last_name, @first_name, @middle_name, @name_filial, @position_user, @block_account);
SELECT id_user, login_user, pass_user, type_user, last_name, first_name, middle_name, name_filial, position_user, block_account FROM User_data WHERE (id_user = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@login_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "login_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pass_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pass_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_filial", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_filial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@position_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@block_account", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "block_account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[User_data] SET [login_user] = @login_user, [pass_user] = @pass_user, [type_user] = @type_user, [last_name] = @last_name, [first_name] = @first_name, [middle_name] = @middle_name, [name_filial] = @name_filial, [position_user] = @position_user, [block_account] = @block_account WHERE (([id_user] = @Original_id_user) AND ([login_user] = @Original_login_user) AND ([pass_user] = @Original_pass_user) AND ([type_user] = @Original_type_user) AND ([last_name] = @Original_last_name) AND ([first_name] = @Original_first_name) AND ([middle_name] = @Original_middle_name) AND ([name_filial] = @Original_name_filial) AND ([position_user] = @Original_position_user) AND ([block_account] = @Original_block_account));
SELECT id_user, login_user, pass_user, type_user, last_name, first_name, middle_name, name_filial, position_user, block_account FROM User_data WHERE (id_user = @id_user)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@login_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "login_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pass_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pass_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@middle_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_filial", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_filial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@position_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@block_account", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "block_account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_login_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "login_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pass_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pass_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_middle_name", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "middle_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_filial", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_filial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_position_user", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "position_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_block_account", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "block_account", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id_user", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Graduate_client.Properties.Settings.Default.Graduate_tarasikConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id_user, login_user, pass_user, type_user, last_name, first_name, middle_n" +
                "ame, name_filial, position_user, block_account FROM dbo.User_data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Graduate_tarasikDataSet.User_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Graduate_tarasikDataSet.User_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Graduate_tarasikDataSet.User_dataDataTable dataTable = new Graduate_tarasikDataSet.User_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet.User_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Graduate_tarasikDataSet dataSet) {
            return this.Adapter.Update(dataSet, "User_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id_user, string Original_login_user, string Original_pass_user, string Original_type_user, string Original_last_name, string Original_first_name, string Original_middle_name, string Original_name_filial, string Original_position_user, int Original_block_account) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id_user));
            if ((Original_login_user == null)) {
                throw new global::System.ArgumentNullException("Original_login_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_login_user));
            }
            if ((Original_pass_user == null)) {
                throw new global::System.ArgumentNullException("Original_pass_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pass_user));
            }
            if ((Original_type_user == null)) {
                throw new global::System.ArgumentNullException("Original_type_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_type_user));
            }
            if ((Original_last_name == null)) {
                throw new global::System.ArgumentNullException("Original_last_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_last_name));
            }
            if ((Original_first_name == null)) {
                throw new global::System.ArgumentNullException("Original_first_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_first_name));
            }
            if ((Original_middle_name == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_middle_name));
            }
            if ((Original_name_filial == null)) {
                throw new global::System.ArgumentNullException("Original_name_filial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_name_filial));
            }
            if ((Original_position_user == null)) {
                throw new global::System.ArgumentNullException("Original_position_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_position_user));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_block_account));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string login_user, string pass_user, string type_user, string last_name, string first_name, string middle_name, string name_filial, string position_user, int block_account) {
            if ((login_user == null)) {
                throw new global::System.ArgumentNullException("login_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(login_user));
            }
            if ((pass_user == null)) {
                throw new global::System.ArgumentNullException("pass_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(pass_user));
            }
            if ((type_user == null)) {
                throw new global::System.ArgumentNullException("type_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(type_user));
            }
            if ((last_name == null)) {
                throw new global::System.ArgumentNullException("last_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(last_name));
            }
            if ((first_name == null)) {
                throw new global::System.ArgumentNullException("first_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(first_name));
            }
            if ((middle_name == null)) {
                throw new global::System.ArgumentNullException("middle_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(middle_name));
            }
            if ((name_filial == null)) {
                throw new global::System.ArgumentNullException("name_filial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(name_filial));
            }
            if ((position_user == null)) {
                throw new global::System.ArgumentNullException("position_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(position_user));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(block_account));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string login_user, 
                    string pass_user, 
                    string type_user, 
                    string last_name, 
                    string first_name, 
                    string middle_name, 
                    string name_filial, 
                    string position_user, 
                    int block_account, 
                    int Original_id_user, 
                    string Original_login_user, 
                    string Original_pass_user, 
                    string Original_type_user, 
                    string Original_last_name, 
                    string Original_first_name, 
                    string Original_middle_name, 
                    string Original_name_filial, 
                    string Original_position_user, 
                    int Original_block_account, 
                    int id_user) {
            if ((login_user == null)) {
                throw new global::System.ArgumentNullException("login_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(login_user));
            }
            if ((pass_user == null)) {
                throw new global::System.ArgumentNullException("pass_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(pass_user));
            }
            if ((type_user == null)) {
                throw new global::System.ArgumentNullException("type_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(type_user));
            }
            if ((last_name == null)) {
                throw new global::System.ArgumentNullException("last_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(last_name));
            }
            if ((first_name == null)) {
                throw new global::System.ArgumentNullException("first_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(first_name));
            }
            if ((middle_name == null)) {
                throw new global::System.ArgumentNullException("middle_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(middle_name));
            }
            if ((name_filial == null)) {
                throw new global::System.ArgumentNullException("name_filial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(name_filial));
            }
            if ((position_user == null)) {
                throw new global::System.ArgumentNullException("position_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(position_user));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(block_account));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_id_user));
            if ((Original_login_user == null)) {
                throw new global::System.ArgumentNullException("Original_login_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_login_user));
            }
            if ((Original_pass_user == null)) {
                throw new global::System.ArgumentNullException("Original_pass_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_pass_user));
            }
            if ((Original_type_user == null)) {
                throw new global::System.ArgumentNullException("Original_type_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_type_user));
            }
            if ((Original_last_name == null)) {
                throw new global::System.ArgumentNullException("Original_last_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_last_name));
            }
            if ((Original_first_name == null)) {
                throw new global::System.ArgumentNullException("Original_first_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_first_name));
            }
            if ((Original_middle_name == null)) {
                throw new global::System.ArgumentNullException("Original_middle_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_middle_name));
            }
            if ((Original_name_filial == null)) {
                throw new global::System.ArgumentNullException("Original_name_filial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_name_filial));
            }
            if ((Original_position_user == null)) {
                throw new global::System.ArgumentNullException("Original_position_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_position_user));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_block_account));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(id_user));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string login_user, 
                    string pass_user, 
                    string type_user, 
                    string last_name, 
                    string first_name, 
                    string middle_name, 
                    string name_filial, 
                    string position_user, 
                    int block_account, 
                    int Original_id_user, 
                    string Original_login_user, 
                    string Original_pass_user, 
                    string Original_type_user, 
                    string Original_last_name, 
                    string Original_first_name, 
                    string Original_middle_name, 
                    string Original_name_filial, 
                    string Original_position_user, 
                    int Original_block_account) {
            return this.Update(login_user, pass_user, type_user, last_name, first_name, middle_name, name_filial, position_user, block_account, Original_id_user, Original_login_user, Original_pass_user, Original_type_user, Original_last_name, Original_first_name, Original_middle_name, Original_name_filial, Original_position_user, Original_block_account, Original_id_user);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Customer_dataTableAdapter _customer_dataTableAdapter;
        
        private Employee_dataTableAdapter _employee_dataTableAdapter;
        
        private Inspection_dataTableAdapter _inspection_dataTableAdapter;
        
        private Insurance_contractTableAdapter _insurance_contractTableAdapter;
        
        private Message_dataTableAdapter _message_dataTableAdapter;
        
        private Service_stationTableAdapter _service_stationTableAdapter;
        
        private User_dataTableAdapter _user_dataTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Customer_dataTableAdapter Customer_dataTableAdapter {
            get {
                return this._customer_dataTableAdapter;
            }
            set {
                this._customer_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Employee_dataTableAdapter Employee_dataTableAdapter {
            get {
                return this._employee_dataTableAdapter;
            }
            set {
                this._employee_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Inspection_dataTableAdapter Inspection_dataTableAdapter {
            get {
                return this._inspection_dataTableAdapter;
            }
            set {
                this._inspection_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Insurance_contractTableAdapter Insurance_contractTableAdapter {
            get {
                return this._insurance_contractTableAdapter;
            }
            set {
                this._insurance_contractTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Message_dataTableAdapter Message_dataTableAdapter {
            get {
                return this._message_dataTableAdapter;
            }
            set {
                this._message_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Service_stationTableAdapter Service_stationTableAdapter {
            get {
                return this._service_stationTableAdapter;
            }
            set {
                this._service_stationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public User_dataTableAdapter User_dataTableAdapter {
            get {
                return this._user_dataTableAdapter;
            }
            set {
                this._user_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._customer_dataTableAdapter != null) 
                            && (this._customer_dataTableAdapter.Connection != null))) {
                    return this._customer_dataTableAdapter.Connection;
                }
                if (((this._employee_dataTableAdapter != null) 
                            && (this._employee_dataTableAdapter.Connection != null))) {
                    return this._employee_dataTableAdapter.Connection;
                }
                if (((this._inspection_dataTableAdapter != null) 
                            && (this._inspection_dataTableAdapter.Connection != null))) {
                    return this._inspection_dataTableAdapter.Connection;
                }
                if (((this._insurance_contractTableAdapter != null) 
                            && (this._insurance_contractTableAdapter.Connection != null))) {
                    return this._insurance_contractTableAdapter.Connection;
                }
                if (((this._message_dataTableAdapter != null) 
                            && (this._message_dataTableAdapter.Connection != null))) {
                    return this._message_dataTableAdapter.Connection;
                }
                if (((this._service_stationTableAdapter != null) 
                            && (this._service_stationTableAdapter.Connection != null))) {
                    return this._service_stationTableAdapter.Connection;
                }
                if (((this._user_dataTableAdapter != null) 
                            && (this._user_dataTableAdapter.Connection != null))) {
                    return this._user_dataTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._customer_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._employee_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._inspection_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._insurance_contractTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._message_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._service_stationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._user_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Graduate_tarasikDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._customer_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Customer_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customer_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._employee_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Employee_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._employee_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._insurance_contractTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Insurance_contract.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._insurance_contractTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._inspection_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Inspection_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._inspection_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._message_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Message_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._message_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._service_stationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Service_station.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._service_stationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._user_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.User_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._user_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Graduate_tarasikDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._customer_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Customer_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customer_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._employee_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Employee_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._employee_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._insurance_contractTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Insurance_contract.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._insurance_contractTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._inspection_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Inspection_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._inspection_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._message_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Message_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._message_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._service_stationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Service_station.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._service_stationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._user_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.User_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._user_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Graduate_tarasikDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._user_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.User_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._user_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._service_stationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Service_station.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._service_stationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._message_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Message_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._message_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._inspection_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Inspection_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._inspection_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._insurance_contractTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Insurance_contract.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._insurance_contractTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._employee_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Employee_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._employee_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customer_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Customer_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customer_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Graduate_tarasikDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._customer_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customer_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._employee_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._employee_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._inspection_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._inspection_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._insurance_contractTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._insurance_contractTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._message_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._message_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._service_stationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._service_stationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._user_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._user_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._customer_dataTableAdapter != null)) {
                    revertConnections.Add(this._customer_dataTableAdapter, this._customer_dataTableAdapter.Connection);
                    this._customer_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._customer_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._customer_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customer_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customer_dataTableAdapter.Adapter);
                    }
                }
                if ((this._employee_dataTableAdapter != null)) {
                    revertConnections.Add(this._employee_dataTableAdapter, this._employee_dataTableAdapter.Connection);
                    this._employee_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._employee_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._employee_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._employee_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._employee_dataTableAdapter.Adapter);
                    }
                }
                if ((this._inspection_dataTableAdapter != null)) {
                    revertConnections.Add(this._inspection_dataTableAdapter, this._inspection_dataTableAdapter.Connection);
                    this._inspection_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._inspection_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._inspection_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._inspection_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._inspection_dataTableAdapter.Adapter);
                    }
                }
                if ((this._insurance_contractTableAdapter != null)) {
                    revertConnections.Add(this._insurance_contractTableAdapter, this._insurance_contractTableAdapter.Connection);
                    this._insurance_contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._insurance_contractTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._insurance_contractTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._insurance_contractTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._insurance_contractTableAdapter.Adapter);
                    }
                }
                if ((this._message_dataTableAdapter != null)) {
                    revertConnections.Add(this._message_dataTableAdapter, this._message_dataTableAdapter.Connection);
                    this._message_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._message_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._message_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._message_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._message_dataTableAdapter.Adapter);
                    }
                }
                if ((this._service_stationTableAdapter != null)) {
                    revertConnections.Add(this._service_stationTableAdapter, this._service_stationTableAdapter.Connection);
                    this._service_stationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._service_stationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._service_stationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._service_stationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._service_stationTableAdapter.Adapter);
                    }
                }
                if ((this._user_dataTableAdapter != null)) {
                    revertConnections.Add(this._user_dataTableAdapter, this._user_dataTableAdapter.Connection);
                    this._user_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._user_dataTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._user_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._user_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._user_dataTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._customer_dataTableAdapter != null)) {
                    this._customer_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._customer_dataTableAdapter]));
                    this._customer_dataTableAdapter.Transaction = null;
                }
                if ((this._employee_dataTableAdapter != null)) {
                    this._employee_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._employee_dataTableAdapter]));
                    this._employee_dataTableAdapter.Transaction = null;
                }
                if ((this._inspection_dataTableAdapter != null)) {
                    this._inspection_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._inspection_dataTableAdapter]));
                    this._inspection_dataTableAdapter.Transaction = null;
                }
                if ((this._insurance_contractTableAdapter != null)) {
                    this._insurance_contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._insurance_contractTableAdapter]));
                    this._insurance_contractTableAdapter.Transaction = null;
                }
                if ((this._message_dataTableAdapter != null)) {
                    this._message_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._message_dataTableAdapter]));
                    this._message_dataTableAdapter.Transaction = null;
                }
                if ((this._service_stationTableAdapter != null)) {
                    this._service_stationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._service_stationTableAdapter]));
                    this._service_stationTableAdapter.Transaction = null;
                }
                if ((this._user_dataTableAdapter != null)) {
                    this._user_dataTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._user_dataTableAdapter]));
                    this._user_dataTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591